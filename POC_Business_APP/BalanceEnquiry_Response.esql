
PATH Eidiko.Dashen.CommanEsql;
DECLARE ns NAMESPACE 'http://Integration_Dashen';
CREATE COMPUTE MODULE BalanceEnquiry_Response
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
	 CALL CopyEntireMessage();
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE rc BOOLEAN FALSE;
		CALL initLog4j(LOG_CONFIG_PATH) INTO rc;
		IF ( rc = FALSE ) THEN
			DECLARE msg CHARACTER ;
			--SET Environment.Variables.Log4j.ErrorMsg = LOG4J_INIT_ERROR_MSG;		
		END IF;
		
		DECLARE EnRef REFERENCE TO Environment.Variables;
		CALL writeToLogFile(MessageFlowLabel, 'ACE-LOG', 'DEGUB','..............Response Received from FlexCube...........') INTO rc;
		DECLARE FlexOut CHARACTER  CAST(ASBITSTREAM(InputRoot.XMLNSC CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding)
		AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		CALL PayloadLogging(EnRef.RefID,FlexOut,'FLEXCUBE-RESPONSE');
		
		SET OutputRoot.Properties=EnRef.InProperties;
		SET OutputRoot.SOAP.Body.ns:AccountBalanceEnquiryResponse= InputRoot.XMLNSC;
		SET EnRef.BusinessOUT =  CAST(ASBITSTREAM(OutputRoot.SOAP CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding)
		AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		PROPAGATE TO TERMINAL 'out';
		CALL writeToLogFile(MessageFlowLabel, 'ACE-LOG', 'DEGUB','..............Response Sent...........') INTO rc;
		
		CALL PayloadLogging(EnRef.RefID,EnRef.BusinessOUT,'BUSINESS-RESPONSE');
		
		
	END;
	
	CREATE FUNCTION PayloadLogging(IN RefId CHARACTER,IN TRAN_PAYLOAD CHARACTER,IN PAYLOAD_TYPE CHARACTER)
	BEGIN
		
		
		SET OutputRoot.XMLNSC.Payload.RefId=RefId;
		SET OutputRoot.XMLNSC.Payload.PayloadType = PAYLOAD_TYPE;
		SET OutputRoot.XMLNSC.Payload.PayloadData =TRAN_PAYLOAD;
		--SET OutputRoot.XMLNSC.Payload 			= ASBITSTREAM(InputRoot.JSON.Data CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);	
		PROPAGATE TO TERMINAL 'out1';
		SET OutputRoot.XMLNSC = NULL;
		
		
	END;
END MODULE;
