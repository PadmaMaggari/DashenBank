BROKER SCHEMA com.dashenbank.LiquidateTransaction
PATH com.dashenbank.genericfunctions;

DECLARE LOG_CONFIG_PATH EXTERNAL CHARACTER;
DECLARE LOG4J_ERROR EXTERNAL CHARACTER;
DECLARE BACKEND_URL EXTERNAL CHARACTER ;
DECLARE LOGGER_NAME EXTERNAL CHARACTER ;
DECLARE LOG_TYPE EXTERNAL CHARACTER ;
--------Global Variables----------
DECLARE rc BOOLEAN;

CREATE COMPUTE MODULE RequestToBackend
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL initLog4j(LOG_CONFIG_PATH) INTO rc;
		IF (rc = TRUE) THEN
			CALL GenerateReqToBackend();
		ELSE
			SET OutputRoot.XMLNSC.Log.Message = LOG4J_ERROR;
		END IF;
		RETURN TRUE;
	END;
	CREATE PROCEDURE GenerateReqToBackend() BEGIN
		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE envRef REFERENCE TO Environment.Variables;
		CREATE LASTCHILD OF Environment AS envRef NAME 'Variables';

		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE ccidRef INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE encodeRef INTEGER InputRoot.Properties.Encoding;
		SET envRef.Encoding = encodeRef;
		SET envRef.CodedCharSetId = ccidRef;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);

		SET envRef.RequestIdentifier = InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier;
		SET Environment.reqPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		DECLARE inRef REFERENCE TO InputRoot.SOAP.*:Body.*:LIQUIDATETRANSACTION_FSFS_REQ;
		SET envRef.id = CAST(InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier AS CHARACTER);
		----------------------------------------------------
		----------------------Request Logging-------------------------
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		CALL PayloadLogging(envRef.id,Environment.reqPayload,'CHANNEL_REQ',MessageFlowLabel,OutRef);
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ CHANNEL_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Request data is: '||Environment.reqPayload) INTO rc;
		----------------------------------------------------
		-------------Business Logic-------------------------
		DECLARE inputHeaderRef REFERENCE TO inRef.*:FCUBS_HEADER;
		DECLARE inputBodyRef REFERENCE TO inRef.*:FCUBS_BODY;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';
		DECLARE outDataRef REFERENCE TO OutputRoot.SOAP ;

		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_HEADER.*:SOURCE = inputHeaderRef.*:SOURCE;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_HEADER.*:UBSCOMP = inputHeaderRef.*:UBSCOMP;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_HEADER.*:USERID = inputHeaderRef.*:USERID;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_HEADER.*:BRANCH = inputHeaderRef.*:BRANCH;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_HEADER.*:MODULEID = inputHeaderRef.*:MODULEID;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_HEADER.*:SERVICE = inputHeaderRef.*:SERVICE;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_HEADER.*:OPERATION = inputHeaderRef.*:OPERATION;

		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_BODY.*:"Transaction-Details".*:XREF = inputBodyRef.*:"Transaction-Details".*:XREF;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_BODY.*:"Transaction-Details".*:INSTRTYPE = inputBodyRef.*:"Transaction-Details".*:INSTRTYPE;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_BODY.*:"Transaction-Details".*:ISSBRN = inputBodyRef.*:"Transaction-Details".*:ISSBRN;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_BODY.*:"Transaction-Details".*:INSTRSTAT = inputBodyRef.*:"Transaction-Details".*:INSTRSTAT;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_BODY.*:"Transaction-Details".*:DDMICRNO = inputBodyRef.*:"Transaction-Details".*:DDMICRNO;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_BODY.*:"Transaction-Details".*:ACBRN = inputBodyRef.*:"Transaction-Details".*:ACBRN;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_BODY.*:"Transaction-Details".*:ACNO = inputBodyRef.*:"Transaction-Details".*:ACNO;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_BODY.*:"Transaction-Details".*:INSTRNO = inputBodyRef.*:"Transaction-Details".*:INSTRNO;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_BODY.*:"Transaction-Details".*:INSTRAMT = inputBodyRef.*:"Transaction-Details".*:INSTRAMT;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_REQ.*:FCUBS_BODY.*:"Transaction-Details".*:NARRATIVE = inputBodyRef.*:"Transaction-Details".*:NARRATIVE;
		
		SET Environment.outputData = OutputRoot.SOAP;
		----------------------------------------------------
		----------------------Response Logging-------------------------
		MOVE domainDataRef TO OutputRoot.SOAP;
		SET Environment.resPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		SET OutputRoot.SOAP = NULL;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		MOVE OutRef TO OutputRoot.XMLNSC;
		CALL PayloadLogging(envRef.id,Environment.resPayload,'BACKEND_REQ',MessageFlowLabel,OutRef);

		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.SOAP = Environment.outputData;

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ BACKEND_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Request data is: '||Environment.resPayload) INTO rc;

		SET OutputLocalEnvironment.Destination.SOAP.Request.Transport.HTTP.WebServiceURL = BACKEND_URL;
  		
	END;
END MODULE;
---------------------------------------------------------------------------------------------------------------------

CREATE COMPUTE MODULE ResponseToChannel
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL GenerateResToFrontend();
		RETURN TRUE;
	END;
	CREATE PROCEDURE GenerateResToFrontend() BEGIN
	
		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE envRef REFERENCE TO Environment.Variables;
		DECLARE inRef REFERENCE TO InputRoot.SOAP.*:Body.*:LIQUIDATETRANSACTION_FSFS_RES;
		DECLARE ccidRef INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE encodeRef INTEGER InputRoot.Properties.Encoding;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);

		SET Environment.reqPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		----------------------------------------------------
		----------------------Request Logging-------------------------
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		CALL PayloadLogging(envRef.id,Environment.reqPayload,'BACKEND_RES',MessageFlowLabel,OutRef);
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ BACKEND_RES ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Response data is: '||Environment.reqPayload) INTO rc;
		----------------------------------------------------
		-------------Business Logic-------------------------
		DECLARE inputHeaderRef REFERENCE TO inRef.*:FCUBS_HEADER;
		DECLARE inputBodyRef REFERENCE TO inRef.*:FCUBS_BODY;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';
		DECLARE outDataRef REFERENCE TO OutputRoot.SOAP ;

		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:SOURCE = inputHeaderRef.*:SOURCE;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:UBSCOMP = inputHeaderRef.*:UBSCOMP;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:MSGID = inputHeaderRef.*:MSGID;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:USERID = inputHeaderRef.*:USERID;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:BRANCH = inputHeaderRef.*:BRANCH;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:MODULEID = inputHeaderRef.*:MODULEID;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:SERVICE = inputHeaderRef.*:SERVICE;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:OPERATION = inputHeaderRef.*:OPERATION;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:SOURCE_OPERATION = inputHeaderRef.*:SOURCE_OPERATION;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:DESTINATION = inputHeaderRef.*:DESTINATION;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:MULTITRIPID = inputHeaderRef.*:MULTITRIPID;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:FUNCTIONID = inputHeaderRef.*:FUNCTIONID;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:ACTION = inputHeaderRef.*:ACTION;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_HEADER.*:MSGSTAT = inputHeaderRef.*:MSGSTAT;

		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:XREF = inputBodyRef.*:"Transaction-Details".*:XREF;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:PRODUCTCODE = inputBodyRef.*:"Transaction-Details".*:PRODUCTCODE;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:FCCREF = inputBodyRef.*:"Transaction-Details".*:FCCREF;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:VERNO = inputBodyRef.*:"Transaction-Details".*:VERNO;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:ESN = inputBodyRef.*:"Transaction-Details".*:ESN;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:INSTRTYPE = inputBodyRef.*:"Transaction-Details".*:INSTRTYPE;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:ISSBRN = inputBodyRef.*:"Transaction-Details".*:ISSBRN;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:INSTRSTAT = inputBodyRef.*:"Transaction-Details".*:INSTRSTAT;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:PAYBANK = inputBodyRef.*:"Transaction-Details".*:PAYBANK;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:EXPDT = inputBodyRef.*:"Transaction-Details".*:EXPDT;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:RELCUST = inputBodyRef.*:"Transaction-Details".*:RELCUST;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:ACBRN = inputBodyRef.*:"Transaction-Details".*:ACBRN;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:ACNO = inputBodyRef.*:"Transaction-Details".*:ACNO;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:CHEQUENO = inputBodyRef.*:"Transaction-Details".*:CHEQUENO;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:BENFNM = inputBodyRef.*:"Transaction-Details".*:BENFNM;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:INSTRNO = inputBodyRef.*:"Transaction-Details".*:INSTRNO;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:INSTRDATE = inputBodyRef.*:"Transaction-Details".*:INSTRDATE;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:INSTRCCY = inputBodyRef.*:"Transaction-Details".*:INSTRCCY;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:INSTRAMT = inputBodyRef.*:"Transaction-Details".*:INSTRAMT;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:EXCHRATE = inputBodyRef.*:"Transaction-Details".*:EXCHRATE;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:ACCCY = inputBodyRef.*:"Transaction-Details".*:ACCCY;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:NARRATIVE = inputBodyRef.*:"Transaction-Details".*:NARRATIVE;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:MAKERID = inputBodyRef.*:"Transaction-Details".*:MAKERID;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:MAKERSTAMP = inputBodyRef.*:"Transaction-Details".*:MAKERSTAMP;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:CHECKERID = inputBodyRef.*:"Transaction-Details".*:CHECKERID;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:CHECKERSTAMP = inputBodyRef.*:"Transaction-Details".*:CHECKERSTAMP;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:CONTSTAT = inputBodyRef.*:"Transaction-Details".*:CONTSTAT;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:AUTHSTAT = inputBodyRef.*:"Transaction-Details".*:AUTHSTAT;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:MODNO = inputBodyRef.*:"Transaction-Details".*:MODNO;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:ONCEAUTH = inputBodyRef.*:"Transaction-Details".*:ONCEAUTH;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:TCYTOTCHGAMT = inputBodyRef.*:"Transaction-Details".*:TCYTOTCHGAMT;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:ACCTITLE = inputBodyRef.*:"Transaction-Details".*:ACCTITLE;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:ACTAMT = inputBodyRef.*:"Transaction-Details".*:ACTAMT;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:TXNDATE = inputBodyRef.*:"Transaction-Details".*:TXNDATE;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:ACYAMOUNT = inputBodyRef.*:"Transaction-Details".*:ACYAMOUNT;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:OFSACC = inputBodyRef.*:"Transaction-Details".*:OFSACC;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:MULCHGCY = inputBodyRef.*:"Transaction-Details".*:MULCHGCY;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:OFSBRANCH = inputBodyRef.*:"Transaction-Details".*:OFSBRANCH;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Cheque-Details".*:PAYBRN = inputBodyRef.*:"Transaction-Details".*:"Cheque-Details".*:PAYBRN ;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Cheque-Details".*:STAT = inputBodyRef.*:"Transaction-Details".*:"Cheque-Details".*:STAT;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Cheque-Details".*:BENFNAME = inputBodyRef.*:"Transaction-Details".*:"Cheque-Details".*:BENFNAME;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:BRANCH = inputBodyRef.*:"Transaction-Details".*:"Mis-Details".*:BRANCH;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:RTFLAG = inputBodyRef.*:"Transaction-Details".*:"Mis-Details".*:RTFLAG;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:FUNDMIS1LBL1 = inputBodyRef.*:"Transaction-Details".*:"Mis-Details".*:FUNDMIS1LBL1;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:COMPMIS3LBL3 = inputBodyRef.*:"Transaction-Details".*:"Mis-Details".*:COMPMIS3LBL3;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:TXNMIS1LBL1 = inputBodyRef.*:"Transaction-Details".*:"Mis-Details".*:TXNMIS1LBL1;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:TXNMIS2LBL2 = inputBodyRef.*:"Transaction-Details".*:"Mis-Details".*:TXNMIS2LBL2;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:FCUBS_WARNING_RESP.*:WARNING.*:WCODE = inputBodyRef.*:FCUBS_WARNING_RESP.*:WARNING.*:WCODE ;
		SET outDataRef.Body.*:LIQUIDATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:FCUBS_WARNING_RESP.*:WARNING.*:WDESC = inputBodyRef.*:FCUBS_WARNING_RESP.*:WARNING.*:WDESC;
		SET Environment.outputData = OutputRoot.SOAP;
		    
        ----------------------------------------------------
		----------------------Response Logging-------------------------
		MOVE domainDataRef TO OutputRoot.SOAP;
		SET Environment.resPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		MOVE OutRef TO OutputRoot.XMLNSC;
		SET OutputRoot.SOAP = NULL;

		CALL PayloadLogging(envRef.id,Environment.reqPayload,'CHANNEL_RES',MessageFlowLabel,OutRef);

		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.HTTPResponseHeader = InputRoot.HTTPResponseHeader;
		SET OutputRoot.SOAP = Environment.outputData;

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ CHANNEL_RES ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Response data is: '||Environment.resPayload) INTO rc;

		SET OutputLocalEnvironment.Destination.HTTP.RequestIdentifier = envRef.RequestIdentifier;

	END;
END MODULE;
-----------------------------------------------------------------------------------------------
CREATE COMPUTE MODULE BuildExceptionResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL BuildExceptionResponse();
		RETURN TRUE;
	END;

	CREATE PROCEDURE BuildExceptionResponse() BEGIN
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'..............Error Logging Started...........') INTO rc;
		--DECLARE inRef REFERENCE TO InputRoot.SOAP;
		DECLARE envRef REFERENCE TO Environment.Variables;
		DECLARE enRef REFERENCE TO Environment;
		DECLARE outRefer,outRef REFERENCE TO OutputRoot;
		--DECLARE encodeID INTEGER InputRoot.Properties.Encoding;
		--DECLARE ccsID INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		DECLARE domainDataRef REFERENCE TO InputBody;
		DECLARE excpRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		DECLARE excpPayload CHARACTER getPayLoad(domainName,domainDataRef,envRef.Encoding,envRef.CodedCharSetId);
		CREATE LASTCHILD OF Environment AS enRef DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'soapenv' NAME 'Envelope';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'soapenv' NAME 'Body';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'esb' NAME ApplicationLabel;
		CALL BuildExceptionDetails(excpRef,enRef,ApplicationLabel);
		SET envRef.UserDefinedException = Environment.XMLNSC;
		MOVE domainDataRef TO Environment.XMLNSC;
		SET domainName = FIELDNAME(domainDataRef);
		DECLARE resPayload CHAR getPayLoad(domainName,domainDataRef,envRef.Encoding,envRef.CodedCharSetId);
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Application Built Exception:'||resPayload) INTO rc;
		DECLARE inputRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF OutputRoot.XMLNSC NAME 'ExceptionDetails';
		DECLARE outExcpRef REFERENCE TO OutputRoot.XMLNSC.ExceptionDetails;
		SET outExcpRef.Msg_Id = envRef.id;
		SET outExcpRef.ExceptionType = inputRef.excpType;
		SET outExcpRef.ExceptionNumber = inputRef.excpNumber;
		SET outExcpRef.ExceptionLable = inputRef.excpLable;
		SET outExcpRef.ExceptionDescription = inputRef.excpText;
		SET outExcpRef.ActualExceptionText = inputRef.actualExcpText;

		SET OutputLocalEnvironment.Destination.HTTP.RequestIdentifier = envRef.RequestIdentifier;
		CALL writeToLogFile(MessageFlowLabel, LOGGER_NAME,LOG_TYPE,'..............End of Error Logging ...........') INTO rc;
	END;
END MODULE;