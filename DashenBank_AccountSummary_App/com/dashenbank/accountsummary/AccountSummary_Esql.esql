



BROKER SCHEMA com.dashenbank.accountsummary
PATH com.dashenbank.genericfunctions;

DECLARE LOG4J_CONFIG_PATH EXTERNAL CHARACTER '';
DECLARE LOG4J_ERROR_MSG EXTERNAL CHARACTER '';
DECLARE LOGGER_NAME EXTERNAL CHARACTER '';
DECLARE LOG_TYPE EXTERNAL CHARACTER '';
DECLARE BACKEND_URL EXTERNAL CHARACTER '';
DECLARE ns1 NAMESPACE 'http://fcubs.ofss.com/service/FCUBSAccService';
DECLARE ns2 NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
--------Global Variables----------
DECLARE rc BOOLEAN TRUE;
DECLARE MSG_ID CHARACTER '';

CREATE COMPUTE MODULE RequestToFlexcube
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL initLog4j(LOG4J_CONFIG_PATH) INTO rc;
		IF ( rc = TRUE ) THEN
			CALL GenerateReqToFlexcube();
		ELSE
			SET Environment.Variables.Log4j.ErrorMsg = LOG4J_ERROR_MSG;
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE GenerateReqToFlexcube() BEGIN
		DECLARE inRef REFERENCE TO InputRoot.SOAP.*:Body.*:QUERYACCSUMM_IOFS_REQ;		
		DECLARE EnRef REFERENCE TO Environment.Variables;
		CREATE LASTCHILD OF Environment AS EnRef NAME 'Variables';

		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE ccidRef INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE encodeRef INTEGER InputRoot.Properties.Encoding;
		SET Environment.Variables.Encoding = encodeRef;
		SET Environment.Variables.CodedCharSetId = ccidRef;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);

		SET Environment.RequestIdentifier = InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier;
		SET Environment.reqPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);

		SET MSG_ID = inRef.*:FCUBS_HEADER.*:MSGID;
		SET Environment.id = MSG_ID;
		----------------------------------------------------
		----------------------Request Logging-------------------------
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		CALL PayloadLogging(MSG_ID,Environment.reqPayload,'CHANNEL_REQ',MessageFlowLabel,OutRef);
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ CHANNEL_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Request data is: '||Environment.reqPayload) INTO rc;
		
		----------------------------------------------------
		-------------Business Logic-------------------------
		DECLARE inputHeaderRef REFERENCE TO InputRoot.SOAP.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER;
		DECLARE inputBodyRef REFERENCE TO InputRoot.SOAP.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_BODY;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';
		DECLARE outputRef REFERENCE TO OutputRoot.SOAP;

		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:ACTION 		= inputHeaderRef.*:ACTION;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:BRANCH 		= inputHeaderRef.*:BRANCH;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:CORRELID 		= inputHeaderRef.*:CORRELID;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:DESTINATION 	= inputHeaderRef.*:DESTINATION;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:ENTITY 		= inputHeaderRef.*:ENTITY;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:FUNCTIONID 	= inputHeaderRef.*:FUNCTIONID;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:MODULEID 		= inputHeaderRef.*:MODULEID;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:MSGID 		= inputHeaderRef.*:MSGID;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:MSGSTAT 		= inputHeaderRef.*:MSGSTAT;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:MULTITRIPID 	= inputHeaderRef.*:MULTITRIPID;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:OPERATION 	= inputHeaderRef.*:OPERATION;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:SERVICE 		= inputHeaderRef.*:SERVICE;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:SOURCE 		= inputHeaderRef.*:SOURCE;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:SOURCE_OPERATION = inputHeaderRef.*:SOURCE_OPERATION;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:UBSCOMP 		= inputHeaderRef.*:UBSCOMP;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_HEADER.*:USERID 		= inputHeaderRef.*:USERID;

		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_REQ.*:FCUBS_BODY.*:"Stvw-Account-Sumary-IO".*:CUST_NO = inputBodyRef.*:"Stvw-Account-Sumary-IO".*:CUST_NO;

		SET Environment.outputData = OutputRoot.SOAP;
		
		----------------------------------------------------
		----------------------Response Logging-------------------------
		MOVE domainDataRef TO OutputRoot.SOAP;
		SET Environment.resPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		SET OutputRoot.SOAP = NULL;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		MOVE OutRef TO OutputRoot.XMLNSC;
		CALL PayloadLogging(MSG_ID,Environment.resPayload,'FLEXCUBE_REQ',MessageFlowLabel,OutRef);

		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.SOAP = Environment.outputData;

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------  FLEXCUBE_REQ  ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Request data is: '||Environment.resPayload) INTO rc;
		
		SET OutputLocalEnvironment.Destination.SOAP.Request.Transport.HTTP.WebServiceURL = BACKEND_URL;
	END;
END MODULE;

-------------------------------------------------------------------------------------------------------------------------------------------------------


CREATE COMPUTE MODULE ResponseToFrontEnd
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL GenerateResToFrontEnd();
		RETURN TRUE;
	END;

	CREATE PROCEDURE GenerateResToFrontEnd() BEGIN

		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE inRef REFERENCE TO InputRoot.SOAP.*:Body.*:QUERYACCSUMM_IOFS_RES;
		DECLARE ccidRef INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE encodeRef INTEGER InputRoot.Properties.Encoding;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);

		SET Environment.reqPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		
		----------------------------------------------------
		----------------------Request Logging-------------------------
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		CALL PayloadLogging(Environment.id,Environment.reqPayload,'FLEXCUBE_RES',MessageFlowLabel,OutRef);
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ FLEXCUBE_RES ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Response data is: '||Environment.reqPayload) INTO rc;
		
		----------------------------------------------------
		-------------Business Logic-------------------------

		DECLARE inputHeaderRef REFERENCE TO inRef.*:FCUBS_HEADER;
		DECLARE inputBodyRef REFERENCE TO inRef.*:FCUBS_BODY;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';
		DECLARE outputRef REFERENCE TO OutputRoot.SOAP;

		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:ACTION = inputHeaderRef.*:ACTION;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:BRANCH = inputHeaderRef.*:BRANCH;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:CORRELID = inputHeaderRef.*:CORRELID;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:DESTINATION = inputHeaderRef.*:DESTINATION;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:ENTITY = inputHeaderRef.*:ENTITY;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:FUNCTIONID = inputHeaderRef.*:FUNCTIONID;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:MODULEID = inputHeaderRef.*:MODULEID;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:MSGID = inputHeaderRef.*:MSGID;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:MSGSTAT = inputHeaderRef.*:MSGSTAT;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:MULTITRIPID = inputHeaderRef.*:MULTITRIPID;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:OPERATION = inputHeaderRef.*:OPERATION;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:SERVICE = inputHeaderRef.*:SERVICE;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:SOURCE = inputHeaderRef.*:SOURCE;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:SOURCE_OPERATION = inputHeaderRef.*:SOURCE_OPERATION;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:UBSCOMP = inputHeaderRef.*:UBSCOMP;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_HEADER.*:USERID = inputHeaderRef.*:USERID;
		-- SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY."ACC-Balance".ACC_BAL = inputBodyRef."ACC-Balance".ACC_BAL;
		
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:FCUBS_WARNING_RESP.*:WARNING.*:WCODE = inputBodyRef.*:FCUBS_WARNING_RESP.*:WARNING.*:WCODE;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:FCUBS_WARNING_RESP.*:WARNING.*:WDESC = inputBodyRef.*:FCUBS_WARNING_RESP.*:WARNING.*:WDESC;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:CUST_NO = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:CUST_NO;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CUSTACNO = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CUSTACNO;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:BRANCH_CODE = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:BRANCH_CODE;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CCY = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CCY;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CURRBAL = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CURRBAL;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:ACCOUNT_TYPE = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:ACCOUNT_TYPE;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CUSTOMER_NAME = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CUSTOMER_NAME;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:AC_DESC = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:AC_DESC;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:ACCOUNT_CLASS = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:ACCOUNT_CLASS;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:ACCLASSDESC = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:ACCLASSDESC;
		
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:FCUBS_WARNING_RESP.*:WARNING.*:WCODE = inputBodyRef.*:FCUBS_WARNING_RESP.*:WARNING.*:WCODE;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:FCUBS_WARNING_RESP.*:WARNING.*:WDESC = inputBodyRef.*:FCUBS_WARNING_RESP.*:WARNING.*:WDESC;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:CUST_NO = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:CUST_NO;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CUSTACNO = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CUSTACNO;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:BRANCH_CODE = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:BRANCH_CODE;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CCY = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CCY;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CURRBAL = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CURRBAL;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:ACCOUNT_TYPE = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:ACCOUNT_TYPE;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CUSTOMER_NAME = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:CUSTOMER_NAME;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:AC_DESC = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:AC_DESC;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:ACCOUNT_CLASS = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:ACCOUNT_CLASS;
		SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:ACCLASSDESC = inputBodyRef.*:"Stvw-Account-Sumary-Full".*:"Stvw-Account-Sumary--A".*:ACCLASSDESC;
		
		-- SET outputRef.*:Body.*:QUERYACCSUMM_IOFS_RES.*:FCUBS_BODY."Stvw-Account-Sumary-IO".CUST_NO = inputBodyRef."Stvw-Account-Sumary-IO".CUST_NO;

		SET Environment.outputData = OutputRoot.SOAP;
		
		----------------------------------------------------
		----------------------Response Logging-------------------------

		MOVE domainDataRef TO OutputRoot.SOAP;
		SET Environment.resPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		MOVE OutRef TO OutputRoot.XMLNSC;
		SET OutputRoot.SOAP = NULL;

		CALL PayloadLogging(Environment.id,Environment.reqPayload,'CHANNEL_RES',MessageFlowLabel,OutRef);

		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.HTTPResponseHeader = InputRoot.HTTPResponseHeader;
		SET OutputRoot.SOAP = Environment.outputData;

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ CHANNEL_RES ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Response data is: '||Environment.resPayload) INTO rc;


	END;
END MODULE;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------




CREATE COMPUTE MODULE BuildExceptionResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL BuildExceptionResponse();
		RETURN TRUE;
	END;


	CREATE PROCEDURE BuildExceptionResponse() BEGIN
		CALL writeToLogFile(MessageFlowLabel, LOGGER_NAME,LOG_TYPE,'..............Error Logging Started...........') INTO rc;
		--DECLARE inRef REFERENCE TO InputRoot.SOAP;
		DECLARE envRef REFERENCE TO Environment;
		DECLARE outRefer,outRef REFERENCE TO OutputRoot;
		--DECLARE encodeID INTEGER InputRoot.Properties.Encoding;
		--DECLARE ccsID INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		DECLARE domainDataRef REFERENCE TO InputBody;
		DECLARE excpRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		DECLARE excpPayload CHARACTER getPayLoad(domainName,domainDataRef,Environment.Variables.Encoding,Environment.Variables.CodedCharSetId);
		CREATE LASTCHILD OF Environment AS envRef DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF envRef AS envRef NAMESPACE 'soapenv' NAME 'Envelope';
		CREATE LASTCHILD OF envRef AS envRef NAMESPACE 'soapenv' NAME 'Body';
		CREATE LASTCHILD OF envRef AS envRef NAMESPACE 'esb' NAME ApplicationLabel;
		CALL BuildExceptionDetails(excpRef,envRef,ApplicationLabel);
		SET Environment.Variables.UserDefinedException = Environment.XMLNSC;
		MOVE domainDataRef TO Environment.XMLNSC;
		SET domainName = FIELDNAME(domainDataRef);
		DECLARE resPayload CHAR getPayLoad(domainName,domainDataRef,Environment.Variables.Encoding,Environment.Variables.CodedCharSetId);
		CALL writeToLogFile(MessageFlowLabel, LOGGER_NAME,LOG_TYPE,'Application Built Exception:'||resPayload) INTO rc;
		------------Error Logging in DB----------
		--CALL ConstructErrorDBLog(CURRENT_TIMESTAMP,CREATED_BY,envRef.ErrorType,MessageFlowLabel,ApplicationLabel,ExecutionGroupLabel,
		---excpPayload,Environment.REQUEST_PAYLOAD,excpRef.excpNumber,envRef.ErrorCode,outRef);
		-------------------------------------------
		SET OutputRoot.XMLNSC.ExceptionDetails.Msg_Id = Environment.id;
		SET OutputRoot.XMLNSC.ExceptionDetails.ExceptionType = InputRoot.XMLNSC.ExceptionDetails.excpType;
		SET OutputRoot.XMLNSC.ExceptionDetails.ExceptionNumber = InputRoot.XMLNSC.ExceptionDetails.excpNumber;
		SET OutputRoot.XMLNSC.ExceptionDetails.ExceptionLable = InputRoot.XMLNSC.ExceptionDetails.excpLable;
		SET OutputRoot.XMLNSC.ExceptionDetails.ExceptionDescription = InputRoot.XMLNSC.ExceptionDetails.excpText;
		SET OutputRoot.XMLNSC.ExceptionDetails.ActualExceptionText = InputRoot.XMLNSC.ExceptionDetails.actualExcpText;		
		--SET OutputLocalEnvironment.Destination.HTTP.RequestIdentifier = Environment.Variables.RequestIdentifier;
		CALL writeToLogFile(MessageFlowLabel, LOGGER_NAME,LOG_TYPE,'..............End of Error Logging ...........') INTO rc;

	END;
END MODULE;
