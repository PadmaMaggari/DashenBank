






BROKER SCHEMA com.dashenbank.accountbalanceenquiry

PATH com.dashenbank.genericfunctions;

DECLARE ns NAMESPACE 'http://www.example.org/AccBalEnq/';
DECLARE ns1 NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
DECLARE ns68 NAMESPACE 'http://www.example.org/AccountBalEnq/';

DECLARE LOG_CONFIG_PATH EXTERNAL CHARACTER '';
DECLARE LOG4J_ERROR EXTERNAL CHARACTER '';
DECLARE BACKEND_URL EXTERNAL CHARACTER '';
DECLARE LOGGER_NAME EXTERNAL CHARACTER '';
DECLARE LOG_TYPE EXTERNAL CHARACTER '';
--------------Global variables--------
DECLARE rc BOOLEAN TRUE;
-------------------------------------

CREATE COMPUTE MODULE RequestToFlexCube
	-- DECLARE rc BOOLEAN;
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL initLog4j(LOG_CONFIG_PATH) INTO rc;
		IF (rc = TRUE) THEN
			CALL request_from_channnel();
		ELSE
			SET OutputRoot.XMLNSC.Log.Message = LOG4J_ERROR;
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE request_from_channnel() BEGIN
		DECLARE MSGID CHARACTER InputRoot.SOAP.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:MSGID;
		SET Environment.ID = MSGID;

		SET Environment.variables.ccidRef = InputRoot.Properties.CodedCharSetId;
		SET Environment.variables.encodeRef = InputRoot.Properties.Encoding;
		SET Environment.variables.domainDataRef = InputRoot.SOAP;
		SET Environment.variables.domainName = FIELDNAME(InputBody);
		-- DECLARE InRef REFERENCE TO InputRoot.SOAP[>];

		DECLARE ccidRef INTEGER Environment.variables.ccidRef;
		DECLARE encodeRef INTEGER Environment.variables.encodeRef;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER Environment.variables.domainName;

		DECLARE inRefPayload CHARACTER getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);

		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		CALL PayloadLogging(MSGID,inRefPayload,'CHANNEL_REQ',ApplicationLabel,OutRef);

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ CHANNEL_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'CHANNEL_REQ data is: '||inRefPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -----------------------------------------------------------------------') INTO rc;
		------ FIELD_TO_FIELD_MAPPING_--------
		DECLARE inputHeaderRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER;
		DECLARE inputBodyRef REFERENCE To InputRoot.SOAP.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_BODY.*:"ACC-Balance".*:ACC_BAL;

		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';
		DECLARE outputSoapRef REFERENCE TO OutputRoot.SOAP;


		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:SOURCE = inputHeaderRef.*:SOURCE;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:UBSCOMP = inputHeaderRef.*:UBSCOMP;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:MSGID = inputHeaderRef.*:MSGID;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:CORRELID = inputHeaderRef.*:CORRELID;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:USERID = inputHeaderRef.*:USERID;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:ENTITY = inputHeaderRef.*:ENTITY;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:BRANCH = inputHeaderRef.*:BRANCH;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:MODULEID = inputHeaderRef.*:MODULEID;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:SERVICE = inputHeaderRef.*:SERVICE;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:OPERATION = inputHeaderRef.*:OPERATION;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:SOURCE_OPERATION = inputHeaderRef.*:SOURCE_OPERATION;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:SOURCE_USERID = inputHeaderRef.*:SOURCE_USERID;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:DESTINATION = inputHeaderRef.*:DESTINATION;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:MULTITRIPID = inputHeaderRef.*:MULTITRIPID;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:FUNCTIONID = inputHeaderRef.*:FUNCTIONID;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:ACTION = inputHeaderRef.*:ACTION;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:MSGSTAT = inputHeaderRef.*:MSGSTAT;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:SNAPSHOTID = inputHeaderRef.*:SNAPSHOTID;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.*:PASSWORD = inputHeaderRef.*:PASSWORD;

		DECLARE inrefheader REFERENCE TO inputHeaderRef.*:ADDL.*:PARAM[>];
		DECLARE I INTEGER 1;

		WHILE LASTMOVE(inrefheader) DO

			SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.ADDL.*:PARAM[I].*:NAME = inputHeaderRef.*:ADDL.*:PARAM.*:NAME;
			SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_HEADER.ADDL.*:PARAM[I].*:VALUE = inputHeaderRef.*:ADDL.*:PARAM.*:VALUE;
			SET I = I + 1;
			MOVE inrefheader NEXTSIBLING;
		END WHILE;
		-- SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_REQ.FCUBS_HEADER.ADDL.PARAM = inputHeaderRef.ADDL.PARAM;

		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_BODY.*:"AC-Balance".*:ACC_BAL.*:BRANCH_CODE = inputBodyRef.*:BRANCH_CODE;
		SET outputSoapRef.Body.*:QUERYACCBAL_IOFS_REQ.*:FCUBS_BODY.*:"AC-Balance".*:ACC_BAL.*:CUST_AC_NO = inputBodyRef.*:CUST_AC_NO;
		-- SET outputbodyRef.Body.ns68:FCUBS_REQ_ENV.FCUB_HEADER.BRANCH = reqIdentifier;

		SET Environment.outSOAP = OutputRoot.SOAP;

		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		DECLARE OutRef1 REFERENCE TO OutputRoot.XMLNSC;
		DECLARE outRefPayload CHARACTER getPayLoad(domainName,OutputRoot.SOAP,encodeRef,ccidRef);
		SET OutputRoot.SOAP = NULL;
		CALL PayloadLogging(MSGID,outRefPayload,'FLEXCUBE_REQ',ApplicationLabel,OutRef1);
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.HTTPInputHeader = InputRoot.HTTPInputHeader;
		SET OutputRoot.SOAP = Environment.outSOAP;

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ FLEXCUBE_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'FLEXCUBE_REQ data is: '||outRefPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -----------------------------------------------------------------------') INTO rc;

		SET OutputLocalEnvironment.Destination.SOAP.Request.Transport.HTTP.WebServiceURL = BACKEND_URL;
	END;
END MODULE;
---------------------------------------------------------------------------------------------------

CREATE COMPUTE MODULE ResponseToChannel
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL response_from_flexcube();
		RETURN TRUE;
	END;
	CREATE PROCEDURE response_from_flexcube() BEGIN
		-- DECLARE reqIdentifier CHARACTER;
		-- SET reqIdentifier = CAST(InputRoot.SOAP.Body.ns68:QUERYACCBAL_IOFS_RES.FCUBS_HEADER.MSGID AS CHARACTER);
		SET Environment.variables.ccidRef1 = InputRoot.Properties.CodedCharSetId;
		SET Environment.variables.encodeRef1 = InputRoot.Properties.Encoding;
		SET Environment.variables.domainDataRef1 = InputRoot.SOAP;
		SET Environment.variables.domainName1 = FIELDNAME(InputBody);

		DECLARE ccidRef INTEGER Environment.variables.ccidRef1;
		DECLARE encodeRef INTEGER Environment.variables.encodeRef1;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER Environment.variables.domainName1;
		DECLARE inRefPayload CHARACTER getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);


		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		CALL PayloadLogging(Environment.ID,inRefPayload,'FLEXCUBE_RESP',ApplicationLabel,OutRef);

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------- FLEXCUBE_RESP -------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'FLEXCUBE_RESP data  is: '||inRefPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ----------------------------------------------------------------------') INTO rc;
		---------- FIELD_TO_FIELD_MAPPING ----------
		DECLARE inputHeaderRef REFERENCE TO InputRoot.SOAP.*:Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER;
		DECLARE inputBodyRef REFERENCE TO InputRoot.SOAP.*:Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_BODY;

		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';
		DECLARE outputbodyRef REFERENCE TO OutputRoot.SOAP;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:SOURCE = inputHeaderRef.*:SOURCE;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:UBSCOMP = inputHeaderRef.*:UBSCOMP;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:MSGID = inputHeaderRef.*:MSGID;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:CORRELID = inputHeaderRef.*:CORRELID;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:USERID = inputHeaderRef.*:USERID;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:ENTITY = inputHeaderRef.*:ENTITY;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:BRANCH = inputHeaderRef.*:BRANCH;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:MODULEID = inputHeaderRef.*:MODULEID;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:SERVICE = inputHeaderRef.*:SERVICE;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:OPERATION = inputHeaderRef.*:OPERATION;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:SOURCE_OPERATION = inputHeaderRef.*:SOURCE_OPERATION;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:DESTINATION = inputHeaderRef.*:DESTINATION;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:FUNCTIONID = inputHeaderRef.*:FUNCTIONID;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:ACTION = inputHeaderRef.*:ACTION;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_HEADER.*:MSGSTAT = inputHeaderRef.*:MSGSTAT;

		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_BODY.*:"ACC-Balance".*:ACC_BAL.*:BRANCH_CODE = inputBodyRef.*:"ACC-Balance".*:ACC_BAL.*:BRANCH_CODE;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_BODY.*:"ACC-Balance".*:ACC_BAL.*:CUST_AC_NO = inputBodyRef.*:"ACC-Balance".*:ACC_BAL.*:CUST_AC_NO;

		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_BODY.*:FCUBS_ERROR_RESP.*:ERROR.*:ECODE = inputBodyRef.*:FCUBS_ERROR_RESP.*:ERROR.*:ECODE;
		SET outputbodyRef.Body.*:QUERYACCBAL_IOFS_RES.*:FCUBS_BODY.*:FCUBS_ERROR_RESP.*:ERROR.*:EDESC = inputBodyRef.*:FCUBS_ERROR_RESP.*:ERROR.*:EDESC;


			SET Environment.outSOAP = OutputRoot.SOAP;

			CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
			DECLARE OutRef1 REFERENCE TO OutputRoot.XMLNSC;
			DECLARE outRefPayload CHARACTER getPayLoad(domainName,OutputRoot.SOAP,encodeRef,ccidRef);
			SET OutputRoot.SOAP = NULL;
			CALL PayloadLogging(Environment.ID,outRefPayload,'CHANNEL_RESP',ApplicationLabel,OutRef1);
			SET OutputRoot.Properties = InputRoot.Properties;
			SET OutputRoot.HTTPResponseHeader= InputRoot.HTTPResponseHeader;
			SET OutputRoot.SOAP = Environment.outSOAP;


			CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -------- CHANNEL_RESP -------') INTO rc;
			CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'CHANNEL_RESP data is: '||outRefPayload) INTO rc;
			CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'**********************************************************************') INTO rc;

		END;
	END MODULE;
	-------------------------------------------------------------------------------------------------
	CREATE COMPUTE MODULE AccountBalanceEnquiry_BuildExceptionResponse
		CREATE FUNCTION Main() RETURNS BOOLEAN
		BEGIN
			CALL BuildExceptionResponse();
			RETURN TRUE;
		END;

		CREATE PROCEDURE BuildExceptionResponse() BEGIN
			CALL writeToLogFile(MessageFlowLabel, LOGGER_NAME,LOG_TYPE,'..............Error Logging Started...........') INTO rc;
			DECLARE inRef REFERENCE TO InputRoot.SOAP;
			DECLARE envRef REFERENCE TO Environment;
			DECLARE outRefer,outRef REFERENCE TO OutputRoot;
			DECLARE encodeID INTEGER InputRoot.Properties.Encoding;
			DECLARE ccsID INTEGER InputRoot.Properties.CodedCharSetId;
			DECLARE domainName CHARACTER FIELDNAME(InputBody);
			DECLARE domainDataRef REFERENCE TO InputBody;
			--DECLARE excpRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
			--DECLARE excpPayload CHARACTER getPayLoad(domainName,domainDataRef,encodeID,ccsID);
			--CREATE LASTCHILD OF Environment AS envRef DOMAIN 'XMLNSC';
			---CREATE LASTCHILD OF envRef AS envRef NAMESPACE 'soapenv' NAME 'Envelope';
			--CREATE LASTCHILD OF envRef AS envRef NAMESPACE 'soapenv' NAME 'Body';
			--CREATE LASTCHILD OF envRef AS envRef NAMESPACE 'esb' NAME 'BatchUpload';
			--CALL BuildExceptionDetails(excpRef,envRef,'BatchUpload');
			--SET Environment.Variables.UserDefinedException = Environment.XMLNSC;
			--MOVE domainDataRef TO Environment.XMLNSC;
			--SET domainName = FIELDNAME(domainDataRef);
			DECLARE resPayload CHAR getPayLoad(domainName,domainDataRef,encodeID,ccsID);
			CALL writeToLogFile(MessageFlowLabel, LOGGER_NAME,LOG_TYPE,'Application Built Exception:'||resPayload) INTO rc;
			------------Error Logging in DB----------
			--CALL ConstructErrorDBLog(CURRENT_TIMESTAMP,CREATED_BY,envRef.ErrorType,MessageFlowLabel,ApplicationLabel,ExecutionGroupLabel,
			---excpPayload,Environment.REQUEST_PAYLOAD,excpRef.excpNumber,envRef.ErrorCode,outRef);
			-------------------------------------------
			SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
			SET OutputLocalEnvironment.Destination.HTTP.RequestIdentifier = Environment.Variables.RequestIdentifier;
			CALL writeToLogFile(MessageFlowLabel, LOGGER_NAME,LOG_TYPE,'..............End of Error Logging ...........') INTO rc;
		END;
	END MODULE;