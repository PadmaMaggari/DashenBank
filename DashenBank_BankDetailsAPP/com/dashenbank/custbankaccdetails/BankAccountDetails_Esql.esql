



BROKER SCHEMA com.dashenbank.custbankaccdetails
PATH com.dashenbank.genericfunctions;
-- DECLARE soapenv NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
DECLARE ns NAMESPACE 'http://fcubs.ofss.com/service/FCUBSAccService';

DECLARE LOG4J_CONFIG_PATH, LOG4J_ERROR_MSG, BACKEND_URL, LOGGER_NAME, LOG_TYPE EXTERNAL CHARACTER;
--------------Global variables--------
DECLARE rc BOOLEAN TRUE;
-------------------------------------
CREATE COMPUTE MODULE BankAccountDetails_RequestToBackend
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL initLog4j(LOG4J_CONFIG_PATH) INTO rc;
		IF (rc = TRUE) THEN
			CALL RequestToBackend();
		ELSE
			SET OutputRoot.XMLNSC.Log.Message = LOG4J_ERROR_MSG;
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE RequestToBackend() BEGIN
		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE ccidRef, encodeRef INTEGER;
		DECLARE envRef REFERENCE TO Environment.Variables;
		CREATE LASTCHILD OF Environment AS envRef NAME 'Variables';

		SET Environment.domainDataRef = InputRoot.SOAP;
		SET ccidRef = InputRoot.Properties.CodedCharSetId;
		SET encodeRef = InputRoot.Properties.Encoding;
		SET envRef.Encoding = encodeRef;
		SET envRef.CodedCharSetId = ccidRef;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);

		SET envRef.RequestIdentifier = CAST(InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier AS CHARACTER);
		SET envRef.ReplyIdentifier = InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier;
		SET Environment.reqPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		SET envRef.id = InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_REQ.*:FCUBS_HEADER.*:MSGID;
		----------------------Request Logging-------------------------
		-- CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		-- DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		-- CALL PayloadLogging(envRef.id,Environment.reqPayload,'CHANNEL_REQ',ApplicationLabel,OutRef);
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'**********************************************************************') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ CHANNEL_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'CHANNEL_REQ data is: '||Environment.reqPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -----------------------------------------------------------------------') INTO rc;
		-------------- Generating request to backend -------------
		DECLARE inputHeaderRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_REQ.*:FCUBS_HEADER;
		DECLARE inputBodyRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_REQ.*:FCUBS_BODY.*:"Cust-Account-IO";

		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';

		SET OutputRoot.SOAP.Context = InputRoot.SOAP.Context;

		CREATE LASTCHILD OF OutputRoot.SOAP NAME 'Body';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body NAMESPACE ns NAME 'QUERYCUSTACC_IOFS_REQ';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_REQ NAMESPACE ns NAME 'FCUBS_HEADER';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_REQ NAMESPACE ns NAME 'FCUBS_BODY';

		DECLARE outputHeaderRef REFERENCE TO OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_REQ.ns:FCUBS_HEADER;
		DECLARE outputBodyRef REFERENCE TO OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_REQ.ns:FCUBS_BODY;

		SET outputHeaderRef.ns:SOURCE = inputHeaderRef.*:SOURCE;
		SET outputHeaderRef.ns:UBSCOMP = inputHeaderRef.*:UBSCOMP;
		SET outputHeaderRef.ns:MSGID = inputHeaderRef.*:MSGID;
		SET outputHeaderRef.ns:CORRELID = inputHeaderRef.*:CORRELID;
		SET outputHeaderRef.ns:USERID = inputHeaderRef.*:USERID;
		SET outputHeaderRef.ns:BRANCH = inputHeaderRef.*:BRANCH;
		SET outputHeaderRef.ns:SERVICE = inputHeaderRef.*:SERVICE;
		SET outputHeaderRef.ns:OPERATION = inputHeaderRef.*:OPERATION;
		SET outputHeaderRef.ns:MSGSTAT = inputHeaderRef.*:MSGSTAT;

		SET outputBodyRef.ns:"Cust-Account-IO".ns:BRN = inputBodyRef.*:BRN;
		SET outputBodyRef.ns:"Cust-Account-IO".ns:ACC = inputBodyRef.*:ACC;

		SET Environment.outputData = OutputRoot.SOAP;
		----------------------Response Logging-------------------------
		MOVE domainDataRef TO OutputRoot.SOAP;
		SET Environment.resPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		SET OutputRoot.SOAP = NULL;
		-- CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		-- MOVE OutRef TO OutputRoot.XMLNSC;
		-- CALL PayloadLogging(envRef.id,Environment.resPayload,'BACKEND_REQ',MessageFlowLabel,OutRef);

		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.HTTPInputHeader = InputRoot.HTTPInputHeader;
		SET OutputRoot.SOAP = Environment.outputData;

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ BACKEND_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'BACKEND_REQ data is: '||Environment.resPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -----------------------------------------------------------------------') INTO rc;

		SET OutputLocalEnvironment.Destination.SOAP.Request.Transport.HTTP.WebServiceURL = BACKEND_URL;
	END;
END MODULE;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE COMPUTE MODULE BankAccountDetails_ResponseToChannel

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL ResponseToChannel();
		RETURN FALSE;
	END;
	CREATE PROCEDURE ResponseToChannel() BEGIN

		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE ccidRef, encodeRef INTEGER;
		DECLARE envRef REFERENCE TO Environment.Variables;

		SET ccidRef = InputRoot.Properties.CodedCharSetId;
		SET encodeRef = InputRoot.Properties.Encoding;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		SET Environment.reqPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		----------------------Request Logging-------------------------
		-- CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		-- DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		-- CALL PayloadLogging(envRef.id,Environment.reqPayload,'BACKEND_RESP',ApplicationLabel,OutRef);

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------- BACKEND_RESP -------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'BACKEND_RESP data  is: '||Environment.reqPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ----------------------------------------------------------------------') INTO rc;
		-------------- Generating response to channel ---------------
		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.HTTPResponseHeader = InputRoot.HTTPResponseHeader;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';

		IF FIELDVALUE(InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_HEADER.*:MSGSTAT)='FAILURE' THEN
			DECLARE inputHeaderRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_HEADER;
			DECLARE inputBodyRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_BODY;
			DECLARE inputBodyErrRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_BODY.*:FCUBS_ERROR_RESP.*:ERROR;

			SET OutputRoot.SOAP.Context = InputRoot.SOAP.Context;

			CREATE LASTCHILD OF OutputRoot.SOAP NAME 'Body';
			CREATE LASTCHILD OF OutputRoot.SOAP.Body NAMESPACE ns NAME 'QUERYCUSTACC_IOFS_RES';
			CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES NAME 'FCUBS_HEADER';
			CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES NAME 'FCUBS_BODY';

			DECLARE outputheaderRef REFERENCE TO OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_HEADER;
			DECLARE outputbodyRef REFERENCE TO OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_BODY;

			SET outputheaderRef.SOURCE = inputHeaderRef.*:SOURCE;
			SET outputheaderRef.UBSCOMP = inputHeaderRef.*:UBSCOMP;
			SET outputheaderRef.MSGID = inputHeaderRef.*:MSGID;
			SET outputheaderRef.CORRELID = inputHeaderRef.*:CORRELID;
			SET outputheaderRef.USERID = inputHeaderRef.*:USERID;
			SET outputheaderRef.ENTITY = inputHeaderRef.*:ENTITY;
			SET outputheaderRef.BRANCH = inputHeaderRef.*:BRANCH;
			SET outputheaderRef.SERVICE = inputHeaderRef.*:SERVICE;
			SET outputheaderRef.OPERATION = inputHeaderRef.*:OPERATION;
			SET outputheaderRef.DESTINATION = inputHeaderRef.*:DESTINATION;
			SET outputheaderRef.FUNCTIONID = inputHeaderRef.*:FUNCTIONID;
			SET outputheaderRef.ACTION = inputHeaderRef.*:ACTION;
			SET outputheaderRef.MSGSTAT = inputHeaderRef.*:MSGSTAT;

			SET outputbodyRef."Cust-Account-Full".BRN = inputBodyRef.*:"Cust-Account-IO".*:BRN;
			SET outputbodyRef."Cust-Account-Full".ACC = inputBodyRef.*:"Cust-Account-IO".*:ACC;

			 DECLARE inputBodyErrorRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_BODY.*:FCUBS_ERROR_RESP[>];
			 DECLARE M INTEGER CARDINALITY(InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_BODY.*:FCUBS_ERROR_RESP.*:ERROR[]);
			 DECLARE L INTEGER 1;
			 WHILE L<=M DO
			 SET outputbodyRef.FCUBS_ERROR_RESP.ERROR[L].ECODE = InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_BODY.*:FCUBS_ERROR_RESP.*:ERROR[L].*:ECODE;
			 SET outputbodyRef.FCUBS_ERROR_RESP.ERROR[L].EDESC = InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_BODY.*:FCUBS_ERROR_RESP.*:ERROR[L].*:EDESC;
			 SET L=L+1;
			 MOVE inputBodyErrorRef NEXTSIBLING;
			 END WHILE;

			SET Environment.outputData = OutputRoot;
			SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = envRef.ReplyIdentifier;
			PROPAGATE TO TERMINAL 'out' DELETE NONE;

		ELSEIF FIELDVALUE(InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_HEADER.*:MSGSTAT) IS NULL THEN

			SET OutputRoot = InputRoot;
			SET Environment.outputData = OutputRoot;
			SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = envRef.ReplyIdentifier;
			PROPAGATE TO TERMINAL 'out' DELETE NONE;

		ELSE
			DECLARE inputHeaderRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_HEADER;
			DECLARE inputBodyRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_BODY.*:"Cust-Account-Full";
			DECLARE inputBodyWarnRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_BODY.*:FCUBS_WARNING_RESP.*:WARNING;

			SET OutputRoot.SOAP.Context = InputRoot.SOAP.Context;

			CREATE LASTCHILD OF OutputRoot.SOAP NAME 'Body';
			CREATE LASTCHILD OF OutputRoot.SOAP.Body NAMESPACE ns NAME 'QUERYCUSTACC_IOFS_RES';
			CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES NAME 'FCUBS_HEADER';
			CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES NAME 'FCUBS_BODY';
			CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_BODY NAME 'Cust-Account-Full';

			CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_BODY NAME 'FCUBS_WARNING_RESP';
			CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_BODY.FCUBS_WARNING_RESP NAME 'WARNING';

			DECLARE outputHeaderRef REFERENCE TO OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_HEADER;
			DECLARE outputBodyRef REFERENCE TO OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_BODY."Cust-Account-Full";
			DECLARE outputWarnRef REFERENCE TO OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_BODY.FCUBS_WARNING_RESP.WARNING;

			SET outputHeaderRef.SOURCE = inputHeaderRef.*:SOURCE;
			SET outputHeaderRef.UBSCOMP = inputHeaderRef.*:UBSCOMP;
			SET outputHeaderRef.MSGID = inputHeaderRef.*:MSGID;
			SET outputHeaderRef.CORRELID = inputHeaderRef.*:CORRELID;
			SET outputHeaderRef.USERID = inputHeaderRef.*:USERID;
			SET outputHeaderRef.ENTITY = inputHeaderRef.*:ENTITY;
			SET outputHeaderRef.BRANCH = inputHeaderRef.*:BRANCH;
			SET outputHeaderRef.SERVICE = inputHeaderRef.*:SERVICE;
			SET outputHeaderRef.OPERATION = inputHeaderRef.*:OPERATION;
			SET outputHeaderRef.DESTINATION = inputHeaderRef.*:DESTINATION;
			SET outputHeaderRef.FUNCTIONID = inputHeaderRef.*:FUNCTIONID;
			SET outputHeaderRef.ACTION = inputHeaderRef.*:ACTION;
			SET outputHeaderRef.MSGSTAT = inputHeaderRef.*:MSGSTAT;

			SET outputBodyRef.BRN = inputBodyRef.*:BRN;
			SET outputBodyRef.ACC = inputBodyRef.*:ACC;
			SET outputBodyRef.CUSTNO = inputBodyRef.*:CUSTNO;
			SET outputBodyRef.ACCLS = inputBodyRef.*:ACCLS;
			SET outputBodyRef.CCY = inputBodyRef.*:CCY;
			SET outputBodyRef.CUSTNAME = inputBodyRef.*:CUSTNAME;
			SET outputBodyRef.ACCLSTYP = inputBodyRef.*:ACCLSTYP;
			SET outputBodyRef.ADESC = inputBodyRef.*:ADESC;
			SET outputBodyRef.ACSTATNODR = inputBodyRef.*:ACSTATNODR;
			SET outputBodyRef.ACSTATNOCR = inputBodyRef.*:ACSTATNOCR;
			SET outputBodyRef.ACSTATSTPAY = inputBodyRef.*:ACSTATSTPAY;
			SET outputBodyRef.DORM = inputBodyRef.*:DORM;
			SET outputBodyRef.ACCTYPE = inputBodyRef.*:ACCTYPE;
			SET outputBodyRef.ACCOPENDT = inputBodyRef.*:ACCOPENDT;
			SET outputBodyRef.ALTACC = inputBodyRef.*:ALTACC;
			SET outputBodyRef.FROZEN = inputBodyRef.*:FROZEN;
			SET outputBodyRef.ADDRESS_1 = inputBodyRef.*:ADDRESS_1;
			SET outputBodyRef.ADDRESS_2 = inputBodyRef.*:ADDRESS_2;
			SET outputBodyRef.ADDRESS_3 = inputBodyRef.*:ADDRESS_3;
			SET outputBodyRef.POSTALLOWED = inputBodyRef.*:POSTALLOWED;
			SET outputBodyRef.TRKREC = inputBodyRef.*:TRKREC;
			SET outputBodyRef.REFREQ = inputBodyRef.*:REFREQ;
			SET outputBodyRef.ACCSTAT = inputBodyRef.*:ACCSTAT;
			SET outputBodyRef.STATSINCE = inputBodyRef.*:STATSINCE;
			SET outputBodyRef.INHERITREP = inputBodyRef.*:INHERITREP;
			SET outputBodyRef.AUTOSTATCHANGE = inputBodyRef.*:AUTOSTATCHANGE;
			SET outputBodyRef.DORMPRM = inputBodyRef.*:DORMPRM;
			SET outputBodyRef.LOC = inputBodyRef.*:LOC;
			SET outputBodyRef.MEDIA = inputBodyRef.*:MEDIA;
			SET outputBodyRef.CHQBOOK = inputBodyRef.*:CHQBOOK;
			SET outputBodyRef.PASSBOOK = inputBodyRef.*:PASSBOOK;
			SET outputBodyRef.CASACC = inputBodyRef.*:CASACC;
			SET outputBodyRef.TYOFCHQ = inputBodyRef.*:TYOFCHQ;
			SET outputBodyRef.ATMDLIM = inputBodyRef.*:ATMDLIM;
			SET outputBodyRef.ATMDCNTLIM = inputBodyRef.*:ATMDCNTLIM;

			SET outputBodyRef.POSPAYAC = inputBodyRef.*:POSPAYAC;
			SET outputBodyRef.AUTOREORDERCHKREQ = inputBodyRef.*:AUTOREORDERCHKREQ;
			SET outputBodyRef.LODGEBKFAC = inputBodyRef.*:LODGEBKFAC;
			SET outputBodyRef.ALLWBKPERENTRY = inputBodyRef.*:ALLWBKPERENTRY;
			SET outputBodyRef.AUTOPROVREQ = inputBodyRef.*:AUTOPROVREQ;
			SET outputBodyRef.PROVCCYTYPE = inputBodyRef.*:PROVCCYTYPE;
			SET outputBodyRef.DEFRECON = inputBodyRef.*:DEFRECON;
			SET outputBodyRef.CONSREQD = inputBodyRef.*:CONSREQD;
			SET outputBodyRef.FUNDING = inputBodyRef.*:FUNDING;
			SET outputBodyRef.MOD9RQD = inputBodyRef.*:MOD9RQD;
			SET outputBodyRef.NETREQ = inputBodyRef.*:NETREQ;
			SET outputBodyRef.ACSTMTDAY = inputBodyRef.*:ACSTMTDAY;
			SET outputBodyRef.ACSTMTCYCLE = inputBodyRef.*:ACSTMTCYCLE;
			SET outputBodyRef.ATM = inputBodyRef.*:ATM;
			SET outputBodyRef.ACSTMTTYPEP = inputBodyRef.*:ACSTMTTYPEP;
			SET outputBodyRef.GENSTMTMV = inputBodyRef.*:GENSTMTMV;
			SET outputBodyRef.DISPIBANINADV = inputBodyRef.*:DISPIBANINADV;
			SET outputBodyRef.ACSTMTTYPS = inputBodyRef.*:ACSTMTTYPS;
			SET outputBodyRef.GENSTMTMV2 = inputBodyRef.*:GENSTMTMV2;
			SET outputBodyRef.ACSTMTTYPE3 = inputBodyRef.*:ACSTMTTYPE3;
			SET outputBodyRef.GENSTMTMV3 = inputBodyRef.*:GENSTMTMV3;
			SET outputBodyRef.FLGEXCLRVRTRANS = inputBodyRef.*:FLGEXCLRVRTRANS;
			SET outputBodyRef.PREVSTMTDT = inputBodyRef.*:PREVSTMTDT;
			SET outputBodyRef.PREVSTMTBAL = inputBodyRef.*:PREVSTMTBAL;
			SET outputBodyRef.PREVSTMTNO = inputBodyRef.*:PREVSTMTNO;
			SET outputBodyRef.SWPTYPE = inputBodyRef.*:SWPTYPE;
			SET outputBodyRef.REGCCAVL = inputBodyRef.*:REGCCAVL;
			SET outputBodyRef.REGDAPP = inputBodyRef.*:REGDAPP;
			SET outputBodyRef.REGDPER = inputBodyRef.*:REGDPER;
			SET outputBodyRef.PRDLST = inputBodyRef.*:PRDLST;
			SET outputBodyRef.TXNLST = inputBodyRef.*:TXNLST;
			SET outputBodyRef.SPCONDLST = inputBodyRef.*:SPCONDLST;
			SET outputBodyRef.SPCONDTXN = inputBodyRef.*:SPCONDTXN;
			SET outputBodyRef.ODREQ = inputBodyRef.*:ODREQ;
			SET outputBodyRef.DAYLIGHTLIMIT = inputBodyRef.*:DAYLIGHTLIMIT;
			SET outputBodyRef.ESCROWTRN = inputBodyRef.*:ESCROWTRN;
			SET outputBodyRef.ACCOUNTAUTOCLOSED = inputBodyRef.*:ACCOUNTAUTOCLOSED;
			SET outputBodyRef.CRS_STST_REQD = inputBodyRef.*:CRS_STST_REQD;
			SET outputBodyRef.MT110_RECON_REQD = inputBodyRef.*:MT110_RECON_REQD;
			SET outputBodyRef.PROJACC = inputBodyRef.*:PROJACC;
			SET outputBodyRef.PRIVATE_CUSTOMER = inputBodyRef.*:PRIVATE_CUSTOMER;
			SET outputBodyRef.DFLT_WAIVER = inputBodyRef.*:DFLT_WAIVER;
			SET outputBodyRef.AUTO_DEBIT_CARD_REQUEST = inputBodyRef.*:AUTO_DEBIT_CARD_REQUEST;
			SET outputBodyRef.AUTO_CHEQUE_BOOK_REQ = inputBodyRef.*:AUTO_CHEQUE_BOOK_REQ;
			SET outputBodyRef.NSFBLKSTAT = inputBodyRef.*:NSFBLKSTAT;
			SET outputBodyRef.DROVD = inputBodyRef.*:DROVD;
			SET outputBodyRef.CROVD = inputBodyRef.*:CROVD;
			SET outputBodyRef.SPL_AC_GEN = inputBodyRef.*:SPL_AC_GEN;
			SET outputBodyRef.MAKER = inputBodyRef.*:MAKER;
			SET outputBodyRef.MAKERSTAMP = inputBodyRef.*:MAKERSTAMP;
			SET outputBodyRef.CHECKER = inputBodyRef.*:CHECKER;
			SET outputBodyRef.CHECKERSTAMP = inputBodyRef.*:CHECKERSTAMP;
			SET outputBodyRef.MODNO = inputBodyRef.*:MODNO;
			SET outputBodyRef.TXNSTAT = inputBodyRef.*:TXNSTAT;
			SET outputBodyRef.AUTHSTAT = inputBodyRef.*:AUTHSTAT;
			SET outputBodyRef."Provision-Main".PRVACCUI = inputBodyRef.*:"Provision-Main".*:PRVACCUI;
			SET outputBodyRef."Interim-Details".INTRMSTMTCNT = inputBodyRef.*:"Interim-Details".*:INTRMSTMTCNT;
			SET outputBodyRef.Acstatuslines.ACSTATUS = inputBodyRef.*:Acstatuslines.*:ACSTATUS;
			SET outputBodyRef.Acstatuslines.DRHOLINE = inputBodyRef.*:Acstatuslines.*:DRHOLINE;
			SET outputBodyRef.Acstatuslines.CRHOLINE = inputBodyRef.*:Acstatuslines.*:CRHOLINE;
			SET outputBodyRef.Acstatuslines.CRCBLINE = inputBodyRef.*:Acstatuslines.*:CRCBLINE;
			SET outputBodyRef.Acstatuslines.DRCBLINE = inputBodyRef.*:Acstatuslines.*:DRCBLINE;
			SET outputBodyRef.Acstatuslines.DRGL = inputBodyRef.*:Acstatuslines.*:DRGL;
			SET outputBodyRef.Acstatuslines.CRGL = inputBodyRef.*:Acstatuslines.*:CRGL;
			SET outputBodyRef.Acstatuslines.DESC = inputBodyRef.*:Acstatuslines.*:DESC;

			SET outputBodyRef.Intdetails.CALCACC = inputBodyRef.*:Intdetails.*:CALCACC;
			SET outputBodyRef.Intdetails.BOOKACC = inputBodyRef.*:Intdetails.*:BOOKACC;
			SET outputBodyRef.Intdetails.HASIS = inputBodyRef.*:Intdetails.*:HASIS;
			SET outputBodyRef.Intdetails.INTSTARTDT = inputBodyRef.*:Intdetails.*:INTSTARTDT;
			SET outputBodyRef.Intdetails.BOOKACCBRN = inputBodyRef.*:Intdetails.*:BOOKACCBRN;
			SET outputBodyRef.Intdetails.DRCRADV = inputBodyRef.*:Intdetails.*:DRCRADV;
			SET outputBodyRef.Intdetails.CHGBOOKACCBRN = inputBodyRef.*:Intdetails.*:CHGBOOKACCBRN;
			SET outputBodyRef.Intdetails.CHGBOOKACC = inputBodyRef.*:Intdetails.*:CHGBOOKACC;
			SET outputBodyRef.Intdetails.CHGSTARTDT = inputBodyRef.*:Intdetails.*:CHGSTARTDT;
			SET outputBodyRef.Intdetails.BRN = inputBodyRef.*:Intdetails.*:BRN;
			SET outputBodyRef.Intdetails.ACC = inputBodyRef.*:Intdetails.*:ACC;
			SET outputBodyRef.Tddetails.AUTOROLL = inputBodyRef.*:Tddetails.*:AUTOROLL;
			SET outputBodyRef.Tddetails.CLONMAT = inputBodyRef.*:Tddetails.*:CLONMAT;
			SET outputBodyRef.Tddetails.MOVINTUNCLM = inputBodyRef.*:Tddetails.*:MOVINTUNCLM;
			SET outputBodyRef.Tddetails.ROLLTYPE = inputBodyRef.*:Tddetails.*:ROLLTYPE;
			SET outputBodyRef.Tddetails.MOVPRIUNCLM = inputBodyRef.*:Tddetails.*:MOVPRIUNCLM;
			SET outputBodyRef.Tddetails.INTSTDT = inputBodyRef.*:Tddetails.*:INTSTDT;
			SET outputBodyRef."Amount-Dates".LCY = inputBodyRef.*:"Amount-Dates".*:LCY;
			SET outputBodyRef."Amount-Dates".ACY = inputBodyRef.*:"Amount-Dates".*:ACY;
			SET outputBodyRef."Amount-Dates".DR_INT_DUE = inputBodyRef.*:"Amount-Dates".*:DR_INT_DUE;
			SET outputBodyRef."Amount-Dates".PROVAMT = inputBodyRef.*:"Amount-Dates".*:PROVAMT;
			SET outputBodyRef."Amount-Dates".CHG_DUE = inputBodyRef.*:"Amount-Dates".*:CHG_DUE;
			SET outputBodyRef."Amount-Dates".WITHDRAWABLE_UNCOLLED_FUND = inputBodyRef.*:"Amount-Dates".*:WITHDRAWABLE_UNCOLLED_FUND;
			SET outputBodyRef."Amount-Dates".ACY_OPENING_BAL = inputBodyRef.*:"Amount-Dates".*:ACY_OPENING_BAL;
			SET outputBodyRef."Amount-Dates".LCY_OPENING_BAL = inputBodyRef.*:"Amount-Dates".*:LCY_OPENING_BAL;
			SET outputBodyRef."Amount-Dates".ACY_TODAY_TOVER_DR = inputBodyRef.*:"Amount-Dates".*:ACY_TODAY_TOVER_DR;
			SET outputBodyRef."Amount-Dates".LCY_TODAY_TOVER_DR = inputBodyRef.*:"Amount-Dates".*:LCY_TODAY_TOVER_DR;
			SET outputBodyRef."Amount-Dates".ACY_TODAY_TOVER_CR = inputBodyRef.*:"Amount-Dates".*:ACY_TODAY_TOVER_CR;
			SET outputBodyRef."Amount-Dates".LCY_TODAY_TOVER_CR = inputBodyRef.*:"Amount-Dates".*:LCY_TODAY_TOVER_CR;
			SET outputBodyRef."Amount-Dates".ACY_TANK_CR = inputBodyRef.*:"Amount-Dates".*:ACY_TANK_CR;
			SET outputBodyRef."Amount-Dates".ACY_TANK_DR = inputBodyRef.*:"Amount-Dates".*:ACY_TANK_DR;
			SET outputBodyRef."Amount-Dates".LCY_TANK_CR = inputBodyRef.*:"Amount-Dates".*:LCY_TANK_CR;
			SET outputBodyRef."Amount-Dates".LCY_TANK_DR = inputBodyRef.*:"Amount-Dates".*:LCY_TANK_DR;
			SET outputBodyRef."Amount-Dates".ACY_TANK_UNCOLLECTED = inputBodyRef.*:"Amount-Dates".*:ACY_TANK_UNCOLLECTED;
			SET outputBodyRef."Amount-Dates".ACY_CURR_BALANCE = inputBodyRef.*:"Amount-Dates".*:ACY_CURR_BALANCE;
			SET outputBodyRef."Amount-Dates".LCY_CURR_BALANCE = inputBodyRef.*:"Amount-Dates".*:LCY_CURR_BALANCE;
			SET outputBodyRef."Amount-Dates".ACY_BLOCKED_AMOUNT = inputBodyRef.*:"Amount-Dates".*:ACY_BLOCKED_AMOUNT;
			SET outputBodyRef."Amount-Dates".ACY_AVL_BAL = inputBodyRef.*:"Amount-Dates".*:ACY_AVL_BAL;
			SET outputBodyRef."Amount-Dates".ACY_UNAUTH_DR = inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH_DR;
			SET outputBodyRef."Amount-Dates".ACY_UNAUTH_TANK_DR = inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH_TANK_DR;
			SET outputBodyRef."Amount-Dates".ACY_UNAUTH_CR = inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH_CR;
			SET outputBodyRef."Amount-Dates".ACY_UNAUTH_TANK_CR = inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH_TANK_CR;
			SET outputBodyRef."Amount-Dates".ACY_UNAUTH_UNCOLLECTED = inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH_UNCOLLECTED;
			SET outputBodyRef."Amount-Dates".ACY_UNAUTH_TANK_UNCOLLECTED = inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH_TANK_UNCOLLECTED;
			SET outputBodyRef."Amount-Dates".ACY_ACCRUED_DR_IC = inputBodyRef.*:"Amount-Dates".*:ACY_ACCRUED_DR_IC;
			SET outputBodyRef."Amount-Dates".ACY_ACCRUED_CR_IC = inputBodyRef.*:"Amount-Dates".*:ACY_ACCRUED_CR_IC;
			SET outputBodyRef."Amount-Dates".DATE_LAST_CR_ACTIVITY = inputBodyRef.*:"Amount-Dates".*:DATE_LAST_CR_ACTIVITY;
			SET outputBodyRef."Amount-Dates".DATE_LAST_DR_ACTIVITY = inputBodyRef.*:"Amount-Dates".*:DATE_LAST_DR_ACTIVITY;
			SET outputBodyRef."Amount-Dates".DATE_LAST_DR = inputBodyRef.*:"Amount-Dates".*:DATE_LAST_DR;
			SET outputBodyRef."Amount-Dates".DATE_LAST_CR = inputBodyRef.*:"Amount-Dates".*:DATE_LAST_CR;
			SET outputBodyRef."Amount-Dates".ACY_UNCOLLECTED = inputBodyRef.*:"Amount-Dates".*:ACY_UNCOLLECTED;
			SET outputBodyRef."Amount-Dates".AMTAVL = inputBodyRef.*:"Amount-Dates".*:AMTAVL;
			SET outputBodyRef."Amount-Dates".DC_ACY_OPEN_BAL = inputBodyRef.*:"Amount-Dates".*:DC_ACY_OPEN_BAL;
			SET outputBodyRef."Amount-Dates".DC_LCY_OPEN_BAL = inputBodyRef.*:"Amount-Dates".*:DC_LCY_OPEN_BAL;
			SET outputBodyRef."Amount-Dates".DC_ACY_CURR_BAL = inputBodyRef.*:"Amount-Dates".*:DC_ACY_CURR_BAL;
			SET outputBodyRef."Amount-Dates".DC_ACY_AVL_BAL = inputBodyRef.*:"Amount-Dates".*:DC_ACY_AVL_BAL;
			SET outputBodyRef."Amount-Dates".DIS_UNUTILIZED_AMT = inputBodyRef.*:"Amount-Dates".*:DIS_UNUTILIZED_AMT;
			SET outputBodyRef."Amount-Dates".DIS_TOT_AVL_AMOUNT = inputBodyRef.*:"Amount-Dates".*:DIS_TOT_AVL_AMOUNT;
			SET outputBodyRef."Amount-Dates".DC_TOT_AVL_AMOUNT = inputBodyRef.*:"Amount-Dates".*:DC_TOT_AVL_AMOUNT;
			SET outputBodyRef."Amount-Dates".DC_LCY_CURR_BAL = inputBodyRef.*:"Amount-Dates".*:DC_LCY_CURR_BAL;
			SET outputBodyRef."Amount-Dates".ACY_UNAUTH = inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH;
			SET outputBodyRef."Amount-Dates".UTILIZED_AMT = inputBodyRef.*:"Amount-Dates".*:UTILIZED_AMT;
			SET outputBodyRef."Amount-Dates".LIMIT_AMOUNT = inputBodyRef.*:"Amount-Dates".*:LIMIT_AMOUNT;
			SET outputBodyRef."Amount-Dates".ILM_SWEEP_BAL = inputBodyRef.*:"Amount-Dates".*:ILM_SWEEP_BAL;
			SET outputBodyRef."Amount-Dates".SWEEP_ELIG_BAL = inputBodyRef.*:"Amount-Dates".*:SWEEP_ELIG_BAL;
			SET outputBodyRef."Amount-Dates".PRINC_OUTSTAND = inputBodyRef.*:"Amount-Dates".*:PRINC_OUTSTAND;
			SET outputBodyRef."Amount-Dates".INT_OUTSTAND = inputBodyRef.*:"Amount-Dates".*:INT_OUTSTAND;
			SET outputBodyRef."Amount-Dates".CHG_OUTSTAND = inputBodyRef.*:"Amount-Dates".*:CHG_OUTSTAND;
			SET outputBodyRef."Amount-Dates".PBKBAL = inputBodyRef.*:"Amount-Dates".*:PBKBAL;
			SET outputBodyRef."Amount-Dates".DC_ILM_SWEEP_BAL = inputBodyRef.*:"Amount-Dates".*:DC_ILM_SWEEP_BAL;
			SET outputBodyRef."Amount-Dates".AMTDUE = inputBodyRef.*:"Amount-Dates".*:AMTDUE;
			SET outputBodyRef."Amount-Dates".Turnovers.ACY_MTD_TOVER_DR = inputBodyRef.*:"Amount-Dates".*:Turnovers.*:ACY_MTD_TOVER_DR;
			SET outputBodyRef."Amount-Dates".Turnovers.LCY_MTD_TOVER_DR = inputBodyRef.*:"Amount-Dates".*:Turnovers.*:LCY_MTD_TOVER_DR;
			SET outputBodyRef."Amount-Dates".Turnovers.ACY_MTD_TOVER_CR = inputBodyRef.*:"Amount-Dates".*:Turnovers.*:ACY_MTD_TOVER_CR;
			SET outputBodyRef."Amount-Dates".Turnovers.LCY_MTD_TOVER_CR = inputBodyRef.*:"Amount-Dates".*:Turnovers.*:LCY_MTD_TOVER_CR;
			SET outputBodyRef."Amount-Dates".Turnovers.ACY_TOV = inputBodyRef.*:"Amount-Dates".*:Turnovers.*:ACY_TOV;
			SET outputBodyRef."Amount-Dates".Turnovers.LCY_TOV = inputBodyRef.*:"Amount-Dates".*:Turnovers.*:LCY_TOV;

			SET outputBodyRef.Noticepref = inputBodyRef.*:Noticepref;
			SET outputBodyRef."Cust-Acc-Check" = inputBodyRef.*:"Cust-Acc-Check";

			SET outputBodyRef."Custacc-Icccspcn".BRNCD = inputBodyRef.*:"Custacc-Icccspcn".*:BRNCD;
			SET outputBodyRef."Custacc-Icccspcn".ACCNO = inputBodyRef.*:"Custacc-Icccspcn".*:ACCNO;

			SET outputBodyRef."Custacc-Icchspcn".BRN = inputBodyRef.*:"Custacc-Icchspcn".*:BRN;
			SET outputBodyRef."Custacc-Icchspcn".ACC = inputBodyRef.*:"Custacc-Icchspcn".*:ACC;

			SET outputBodyRef."Custacc-Iccinstr".BRN = inputBodyRef.*:"Custacc-Iccinstr".*:BRN;
			SET outputBodyRef."Custacc-Iccinstr".ACC = inputBodyRef.*:"Custacc-Iccinstr".*:ACC;

			SET outputBodyRef.CustAcc.BRN = inputBodyRef.*:CustAcc.*:BRN;
			SET outputBodyRef.CustAcc.ACC = inputBodyRef.*:CustAcc.*:ACC;

			SET outputBodyRef.CustAcc.Misdetails.POOLCD = inputBodyRef.*:CustAcc.*:Misdetails.*:POOLCD;
			SET outputBodyRef.CustAcc.Misdetails.REFRTTYPE = inputBodyRef.*:CustAcc.*:Misdetails.*:REFRTTYPE;
			SET outputBodyRef.CustAcc.Misdetails.CALCMETH = inputBodyRef.*:CustAcc.*:Misdetails.*:CALCMETH;
			SET outputBodyRef.CustAcc.Misdetails.TXNMIS1 = inputBodyRef.*:CustAcc.*:Misdetails.*:TXNMIS1;
			SET outputBodyRef.CustAcc.Misdetails.TXNMIS2 = inputBodyRef.*:CustAcc.*:Misdetails.*:TXNMIS2;
			SET outputBodyRef.CustAcc.Misdetails.COMPMIS3 = inputBodyRef.*:CustAcc.*:Misdetails.*:COMPMIS3;
			SET outputBodyRef.CustAcc.Misdetails.RTFLAG = inputBodyRef.*:CustAcc.*:Misdetails.*:RTFLAG;

			SET outputBodyRef."Custacc-Sicdiary" = inputBodyRef.*:"Custacc-Sicdiary";

			SET outputBodyRef."Custacc-Stccusbl".BRN = inputBodyRef.*:"Custacc-Stccusbl".*:BRN;
			SET outputBodyRef."Custacc-Stccusbl".ACCNO = inputBodyRef.*:"Custacc-Stccusbl".*:ACCNO;

			DECLARE Inrefsoapbody REFERENCE TO inputBodyRef.*:UDFDETAILS[>];
			DECLARE J INTEGER CARDINALITY(inputBodyRef.*:UDFDETAILS[]);
			DECLARE I INTEGER 1;
			WHILE I<=J DO
				SET outputBodyRef.UDFDETAILS[I].FLDNAM = Inrefsoapbody.*:FLDNAM;
				SET I = I + 1;
				MOVE Inrefsoapbody NEXTSIBLING REPEAT TYPE NAME;
			END WHILE;

			SET outputBodyRef."Acc-Svcacsig".ACBRN1 = inputBodyRef.*:"Acc-Svcacsig".*:ACBRN1;
			SET outputBodyRef."Acc-Svcacsig".ACTNO = inputBodyRef.*:"Acc-Svcacsig".*:ACTNO;
			SET outputBodyRef."Acc-Svcacsig".ACDESC = inputBodyRef.*:"Acc-Svcacsig".*:ACDESC;
			SET outputBodyRef."Acc-Svcacsig".ACCMSG = inputBodyRef.*:"Acc-Svcacsig".*:ACCMSG;
			SET outputBodyRef."Acc-Svcacsig".MINNOSIG = inputBodyRef.*:"Acc-Svcacsig".*:MINNOSIG;
			SET outputBodyRef."Acc-Svcacsig".ACCCY = inputBodyRef.*:"Acc-Svcacsig".*:ACCCY;
			SET outputBodyRef."Acc-Svcacsig".Accsigdetails.CUST_ID = inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:CUST_ID;
			SET outputBodyRef."Acc-Svcacsig".Accsigdetails.RELATIONTYP = inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:RELATIONTYP;
			SET outputBodyRef."Acc-Svcacsig".Accsigdetails.SIGID = inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:SIGID;
			SET outputBodyRef."Acc-Svcacsig".Accsigdetails.SIGMSG = inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:SIGMSG;
			SET outputBodyRef."Acc-Svcacsig".Accsigdetails.SIGTYPE = inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:SIGTYPE;
			SET outputBodyRef."Acc-Svcacsig".Accsigdetails.APPROVLIMIT = inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:APPROVLIMIT;
			SET outputBodyRef."Acc-Svcacsig".Accsigdetails.SIGNAME = inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:SIGNAME;

			SET outputBodyRef."Acc-Svcacsig".Accsigdetails.SOLOSIG = inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:SOLOSIG;

			SET outputBodyRef."Custacc-Iccintpo".BRANCH_CODE = inputBodyRef.*:"Custacc-Iccintpo".*:BRANCH_CODE;
			SET outputBodyRef."Custacc-Iccintpo".CUST_AC_NO = inputBodyRef.*:"Custacc-Iccintpo".*:CUST_AC_NO;
			SET outputBodyRef."Custacc-Iccintpo".CCY = inputBodyRef.*:"Custacc-Iccintpo".*:CCY;

			SET outputBodyRef."Customer-Acc".BRANCH_CODE = inputBodyRef.*:"Customer-Acc".*:BRANCH_CODE;
			SET outputBodyRef."Customer-Acc".CUST_AC_NO = inputBodyRef.*:"Customer-Acc".*:CUST_AC_NO;

			SET outputBodyRef."Sttms-Cust-Acc-Swp".BRANCH_CODE = inputBodyRef.*:"Sttms-Cust-Acc-Swp".*:BRANCH_CODE;
			SET outputBodyRef."Sttms-Cust-Acc-Swp".CUST_AC_NO = inputBodyRef.*:"Sttms-Cust-Acc-Swp".*:CUST_AC_NO;

			SET outputBodyRef."Acc-Chnl".BRANCH_CODE = inputBodyRef.*:"Acc-Chnl".*:BRANCH_CODE;
			SET outputBodyRef."Acc-Chnl".CUST_AC_NO = inputBodyRef.*:"Acc-Chnl".*:CUST_AC_NO;

			SET outputWarnRef.WCODE = inputBodyWarnRef.*:WCODE;
			SET outputWarnRef.WDESC = inputBodyWarnRef.*:WDESC;

			SET Environment.outputData = OutputRoot;
			SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = envRef.ReplyIdentifier;
			PROPAGATE TO TERMINAL 'out' DELETE NONE;
		END IF;
		---------------------- Response Logging -------------------------
		MOVE domainDataRef TO Environment.outputData.SOAP;
		SET Environment.resPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		-- CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		-- MOVE OutRef TO OutputRoot.XMLNSC;
		-- CALL PayloadLogging(envRef.id,Environment.reqPayload,'CHANNEL_RESP',MessageFlowLabel,OutRef);

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -------- CHANNEL_RESP -------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'CHANNEL_RESP data is: '||Environment.resPayload) INTO rc;

	END;
END MODULE;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


CREATE COMPUTE MODULE BankAccountDetails_BuildExceptionResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL BuildExceptionResponse();
		RETURN TRUE;
	END;

	CREATE PROCEDURE BuildExceptionResponse() BEGIN
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'..............Error Logging Started...........') INTO rc;
		--DECLARE inRef REFERENCE TO InputRoot.SOAP;
		DECLARE envRef REFERENCE TO Environment.Variables;
		DECLARE enRef REFERENCE TO Environment;
		DECLARE outRefer,outRef REFERENCE TO OutputRoot;
		--DECLARE encodeID INTEGER InputRoot.Properties.Encoding;
		--DECLARE ccsID INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		DECLARE domainDataRef REFERENCE TO InputBody;
		DECLARE excpRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		DECLARE excpPayload CHARACTER getPayLoad(domainName,domainDataRef,envRef.Encoding,envRef.CodedCharSetId);
		CREATE LASTCHILD OF Environment AS enRef DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'soapenv' NAME 'Envelope';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'soapenv' NAME 'Body';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'esb' NAME ApplicationLabel;
		CALL BuildExceptionDetails(excpRef,enRef,ApplicationLabel);
		SET envRef.UserDefinedException = Environment.XMLNSC;
		MOVE domainDataRef TO Environment.XMLNSC;
		SET domainName = FIELDNAME(domainDataRef);
		DECLARE resPayload CHAR getPayLoad(domainName,domainDataRef,envRef.Encoding,envRef.CodedCharSetId);
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Application Built Exception:'||resPayload) INTO rc;
		DECLARE inputRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF OutputRoot.XMLNSC NAME 'ExceptionDetails';
		DECLARE outExcpRef REFERENCE TO OutputRoot.XMLNSC.ExceptionDetails;
		SET outExcpRef.Msg_Id = envRef.id;
		SET outExcpRef.ExceptionType = inputRef.excpType;
		SET outExcpRef.ExceptionNumber = inputRef.excpNumber;
		SET outExcpRef.ExceptionLable = inputRef.excpLable;
		SET outExcpRef.ExceptionDescription = inputRef.excpText;
		SET outExcpRef.ActualExceptionText = inputRef.actualExcpText;

		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = envRef.ReplyIdentifier;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'..............End of Error Logging ...........') INTO rc;
	END;
END MODULE;