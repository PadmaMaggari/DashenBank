

BROKER SCHEMA com.dashenbank.custbankaccdetails
PATH com.dashenbank.genericfunctions;
-- DECLARE soapenv NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
DECLARE ns NAMESPACE 'http://fcubs.ofss.com/service/FCUBSAccService';

DECLARE LOG4J_CONFIG_PATH, LOG4J_ERROR_MSG, BACKEND_URL, LOGGER_NAME, LOG_TYPE EXTERNAL CHARACTER;
--------------Global variables--------
DECLARE rc BOOLEAN TRUE;
-------------------------------------
CREATE COMPUTE MODULE BankAccountDetails_RequestToBackend
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL initLog4j(LOG4J_CONFIG_PATH) INTO rc;
		IF (rc = TRUE) THEN
			CALL RequestToBackend();
		ELSE
			SET OutputRoot.XMLNSC.Log.Message = LOG4J_ERROR_MSG;
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE RequestToBackend() BEGIN
		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE ccidRef, encodeRef INTEGER;
		DECLARE envRef REFERENCE TO Environment.Variables;
		CREATE LASTCHILD OF Environment AS envRef NAME 'Variables';

		SET ccidRef = InputRoot.Properties.CodedCharSetId;
		SET encodeRef = InputRoot.Properties.Encoding;
		SET envRef.Encoding = encodeRef;
		SET envRef.CodedCharSetId = ccidRef;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);

		SET envRef.RequestIdentifier = CAST(InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier AS CHARACTER);
		SET envRef.ReplyIdentifier = InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier;
		SET Environment.reqPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		SET envRef.id = InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_REQ.*:FCUBS_HEADER.*:MSGID;
		----------------------Request Logging-------------------------
		-- CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		-- DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		-- CALL PayloadLogging(envRef.id,Environment.reqPayload,'CHANNEL_REQ',ApplicationLabel,OutRef);
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'**********************************************************************') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ CHANNEL_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'CHANNEL_REQ data is: '||Environment.reqPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -----------------------------------------------------------------------') INTO rc;
		-------------- Generating request to backend -------------
		DECLARE inputHeaderRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_REQ.*:FCUBS_HEADER;
		DECLARE inputBodyRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_REQ.*:FCUBS_BODY.*:"Cust-Account-IO";

		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';

		SET OutputRoot.SOAP.Context = InputRoot.SOAP.Context;

		CREATE LASTCHILD OF OutputRoot.SOAP NAME 'Body';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body NAMESPACE ns NAME 'QUERYCUSTACC_IOFS_REQ';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_REQ NAMESPACE ns NAME 'FCUBS_HEADER';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_REQ NAMESPACE ns NAME 'FCUBS_BODY';

		DECLARE outputHeaderRef REFERENCE TO OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_REQ.ns:FCUBS_HEADER;
		DECLARE outputBodyRef REFERENCE TO OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_REQ.ns:FCUBS_BODY;

		SET outputHeaderRef.ns:SOURCE = inputHeaderRef.*:SOURCE;
		SET outputHeaderRef.ns:UBSCOMP = inputHeaderRef.*:UBSCOMP;
		SET outputHeaderRef.ns:MSGID = inputHeaderRef.*:MSGID;
		SET outputHeaderRef.ns:CORRELID = inputHeaderRef.*:CORRELID;
		SET outputHeaderRef.ns:USERID = inputHeaderRef.*:USERID;
		SET outputHeaderRef.ns:BRANCH = inputHeaderRef.*:BRANCH;
		SET outputHeaderRef.ns:SERVICE = inputHeaderRef.*:SERVICE;
		SET outputHeaderRef.ns:OPERATION = inputHeaderRef.*:OPERATION;
		SET outputHeaderRef.ns:MSGSTAT = inputHeaderRef.*:MSGSTAT;

		SET outputBodyRef.ns:"Cust-Account-IO".ns:BRN = inputBodyRef.*:BRN;
		SET outputBodyRef.ns:"Cust-Account-IO".ns:ACC = inputBodyRef.*:ACC;

		SET Environment.outputData = OutputRoot.SOAP;
		----------------------Response Logging-------------------------
		MOVE domainDataRef TO OutputRoot.SOAP;
		SET Environment.resPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		SET OutputRoot.SOAP = NULL;
		-- CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		-- MOVE OutRef TO OutputRoot.XMLNSC;
		-- CALL PayloadLogging(envRef.id,Environment.resPayload,'BACKEND_REQ',MessageFlowLabel,OutRef);

		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.HTTPInputHeader = InputRoot.HTTPInputHeader;
		SET OutputRoot.SOAP = Environment.outputData;

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ BACKEND_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'BACKEND_REQ data is: '||Environment.resPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -----------------------------------------------------------------------') INTO rc;

		SET OutputLocalEnvironment.Destination.SOAP.Request.Transport.HTTP.WebServiceURL = BACKEND_URL;
	END;
END MODULE;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE COMPUTE MODULE BankAccountDetails_ResponseToChannel

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL ResponseToChannel();
		RETURN TRUE;
	END;
	CREATE PROCEDURE ResponseToChannel() BEGIN

		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE ccidRef, encodeRef INTEGER;
		DECLARE envRef REFERENCE TO Environment.Variables;

		SET ccidRef = InputRoot.Properties.CodedCharSetId;
		SET encodeRef = InputRoot.Properties.Encoding;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		SET Environment.reqPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		----------------------Request Logging-------------------------
		-- CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		-- DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		-- CALL PayloadLogging(envRef.id,Environment.reqPayload,'BACKEND_RESP',ApplicationLabel,OutRef);

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------- BACKEND_RESP -------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'BACKEND_RESP data  is: '||Environment.reqPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ----------------------------------------------------------------------') INTO rc;
		-------------- Generating response to channel ---------------

		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';

		DECLARE inputHeaderRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_HEADER;
		DECLARE inputBodyRef REFERENCE TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_BODY.*:"Cust-Account-Full";

		SET OutputRoot.SOAP.Context = InputRoot.SOAP.Context;

		CREATE LASTCHILD OF OutputRoot.SOAP NAME 'Body';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body NAMESPACE ns NAME 'QUERYCUSTACC_IOFS_RES';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES NAME 'FCUBS_HEADER';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES NAME 'FCUBS_BODY';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_BODY NAME 'Cust-Account-Full';

		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_BODY NAME 'FCUBS_WARNING_RESP';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_BODY.FCUBS_WARNING_RESP NAME 'WARNING';

		DECLARE outputHeaderRef REFERENCE TO OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_HEADER;
		DECLARE outputBodyRef REFERENCE TO OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_BODY."Cust-Account-Full";
		DECLARE outputBodyRefer REFERENCE TO OutputRoot.SOAP.Body.ns:QUERYCUSTACC_IOFS_RES.FCUBS_BODY;

		SET outputHeaderRef.SOURCE = NULLIF(inputHeaderRef.*:SOURCE,'');
		SET outputHeaderRef.UBSCOMP = NULLIF(inputHeaderRef.*:UBSCOMP,'');
		SET outputHeaderRef.MSGID = NULLIF(inputHeaderRef.*:MSGID,'');
		SET outputHeaderRef.CORRELID = NULLIF(inputHeaderRef.*:CORRELID,'');
		SET outputHeaderRef.USERID = NULLIF(inputHeaderRef.*:USERID,'');
		SET outputHeaderRef.ENTITY = NULLIF(inputHeaderRef.*:ENTITY,'');
		SET outputHeaderRef.BRANCH = NULLIF(inputHeaderRef.*:BRANCH,'');
		SET outputHeaderRef.SERVICE = NULLIF(inputHeaderRef.*:SERVICE,'');
		SET outputHeaderRef.OPERATION = NULLIF(inputHeaderRef.*:OPERATION,'');
		SET outputHeaderRef.DESTINATION = NULLIF(inputHeaderRef.*:DESTINATION,'');
		SET outputHeaderRef.FUNCTIONID = NULLIF(inputHeaderRef.*:FUNCTIONID,'');
		SET outputHeaderRef.ACTION = NULLIF(inputHeaderRef.*:ACTION,'');
		SET outputHeaderRef.MSGSTAT = NULLIF(inputHeaderRef.*:MSGSTAT,'');

		SET outputBodyRef.BRN = NULLIF(inputBodyRef.*:BRN,'');
		SET outputBodyRef.ACC = NULLIF(inputBodyRef.*:ACC,'');
		SET outputBodyRef.CUSTNO = NULLIF(inputBodyRef.*:CUSTNO,'');
		SET outputBodyRef.ACCLS = NULLIF(inputBodyRef.*:ACCLS,'');
		SET outputBodyRef.CCY = NULLIF(inputBodyRef.*:CCY,'');
		SET outputBodyRef.CUSTNAME = NULLIF(inputBodyRef.*:CUSTNAME,'');
		SET outputBodyRef.ACCLSTYP = NULLIF(inputBodyRef.*:ACCLSTYP,'');
		SET outputBodyRef.ADESC = NULLIF(inputBodyRef.*:ADESC,'');
		SET outputBodyRef.ACSTATNODR = NULLIF(inputBodyRef.*:ACSTATNODR,'');
		SET outputBodyRef.ACSTATNOCR = NULLIF(inputBodyRef.*:ACSTATNOCR,'');
		SET outputBodyRef.ACSTATSTPAY = NULLIF(inputBodyRef.*:ACSTATSTPAY,'');
		SET outputBodyRef.DORM = NULLIF(inputBodyRef.*:DORM,'');
		SET outputBodyRef.ACCTYPE = NULLIF(inputBodyRef.*:ACCTYPE,'');
		SET outputBodyRef.ACCOPENDT = NULLIF(inputBodyRef.*:ACCOPENDT,'');
		SET outputBodyRef.ALTACC = NULLIF(inputBodyRef.*:ALTACC,'');
		SET outputBodyRef.FROZEN = NULLIF(inputBodyRef.*:FROZEN,'');
		SET outputBodyRef.ADDRESS_1 = NULLIF(inputBodyRef.*:ADDRESS_1,'');
		SET outputBodyRef.ADDRESS_2 = NULLIF(inputBodyRef.*:ADDRESS_2,'');
		SET outputBodyRef.ADDRESS_3 = NULLIF(inputBodyRef.*:ADDRESS_3,'');
		SET outputBodyRef.ADDRESS_4 = NULLIF(inputBodyRef.*:ADDRESS_4,'');
		SET outputBodyRef.POSTALLOWED = NULLIF(inputBodyRef.*:POSTALLOWED,'');
		SET outputBodyRef.TRKREC = NULLIF(inputBodyRef.*:TRKREC,'');
		SET outputBodyRef.REFREQ = NULLIF(inputBodyRef.*:REFREQ,'');
		SET outputBodyRef.ACCSTAT = NULLIF(inputBodyRef.*:ACCSTAT,'');
		SET outputBodyRef.STATSINCE = NULLIF(inputBodyRef.*:STATSINCE,'');
		SET outputBodyRef.INHERITREP = NULLIF(inputBodyRef.*:INHERITREP,'');
		SET outputBodyRef.AUTOSTATCHANGE = NULLIF(inputBodyRef.*:AUTOSTATCHANGE,'');
		SET outputBodyRef.DORMPRM = NULLIF(inputBodyRef.*:DORMPRM,'');
		SET outputBodyRef.LOC = NULLIF(inputBodyRef.*:LOC,'');
		SET outputBodyRef.MEDIA = NULLIF(inputBodyRef.*:MEDIA,'');
		SET outputBodyRef.CHQBOOK = NULLIF(inputBodyRef.*:CHQBOOK,'');
		SET outputBodyRef.PASSBOOK = NULLIF(inputBodyRef.*:PASSBOOK,'');
		SET outputBodyRef.CASACC = NULLIF(inputBodyRef.*:CASACC,'');
		SET outputBodyRef.TYOFCHQ = NULLIF(inputBodyRef.*:TYOFCHQ,'');
		SET outputBodyRef.ATMDLIM = NULLIF(inputBodyRef.*:ATMDLIM,'');
		SET outputBodyRef.ATMDCNTLIM = NULLIF(inputBodyRef.*:ATMDCNTLIM,'');
		SET outputBodyRef.MT210REQD = NULLIF(inputBodyRef.*:MT210REQD,'');
		SET outputBodyRef.POSPAYAC = NULLIF(inputBodyRef.*:POSPAYAC,'');
		SET outputBodyRef.AUTOREORDERCHKREQ = NULLIF(inputBodyRef.*:AUTOREORDERCHKREQ,'');
		SET outputBodyRef.LODGEBKFAC = NULLIF(inputBodyRef.*:LODGEBKFAC,'');
		SET outputBodyRef.ALLWBKPERENTRY = NULLIF(inputBodyRef.*:ALLWBKPERENTRY,'');
		SET outputBodyRef.AUTOPROVREQ = NULLIF(inputBodyRef.*:AUTOPROVREQ,'');
		SET outputBodyRef.PROVCCYTYPE = NULLIF(inputBodyRef.*:PROVCCYTYPE,'');
		SET outputBodyRef.DEFRECON = NULLIF(inputBodyRef.*:DEFRECON,'');
		SET outputBodyRef.CONSREQD = NULLIF(inputBodyRef.*:CONSREQD,'');
		SET outputBodyRef.FUNDING = NULLIF(inputBodyRef.*:FUNDING,'');
		SET outputBodyRef.MOD9RQD = NULLIF(inputBodyRef.*:MOD9RQD,'');
		SET outputBodyRef.SUBLIMIT = NULLIF(inputBodyRef.*:SUBLIMIT,'');
		SET outputBodyRef.UNCOLFUNDLIMIT = NULLIF(inputBodyRef.*:UNCOLFUNDLIMIT,'');
		SET outputBodyRef.NETREQ = NULLIF(inputBodyRef.*:NETREQ,'');
		SET outputBodyRef.ACSTMTDAY = NULLIF(inputBodyRef.*:ACSTMTDAY,'');
		SET outputBodyRef.ACSTMTCYCLE = NULLIF(inputBodyRef.*:ACSTMTCYCLE,'');
		SET outputBodyRef.ATM = NULLIF(inputBodyRef.*:ATM,'');
		SET outputBodyRef.ACSTMTTYPEP = NULLIF(inputBodyRef.*:ACSTMTTYPEP,'');
		SET outputBodyRef.GENSTMTMV = NULLIF(inputBodyRef.*:GENSTMTMV,'');
		SET outputBodyRef.DISPIBANINADV = NULLIF(inputBodyRef.*:DISPIBANINADV,'');
		SET outputBodyRef.ACSTMTTYPS = NULLIF(inputBodyRef.*:ACSTMTTYPS,'');
		SET outputBodyRef.GENSTMTMV2 = NULLIF(inputBodyRef.*:GENSTMTMV2,'');
		SET outputBodyRef.ACSTMTTYPE3 = NULLIF(inputBodyRef.*:ACSTMTTYPE3,'');
		SET outputBodyRef.GENSTMTMV3 = NULLIF(inputBodyRef.*:GENSTMTMV3,'');
		SET outputBodyRef.FLGEXCLRVRTRANS = NULLIF(inputBodyRef.*:FLGEXCLRVRTRANS,'');
		SET outputBodyRef.PREVSTMTDT = NULLIF(inputBodyRef.*:PREVSTMTDT,'');
		SET outputBodyRef.PREVSTMTBAL = NULLIF(inputBodyRef.*:PREVSTMTBAL,'');
		SET outputBodyRef.PREVSTMTNO = NULLIF(inputBodyRef.*:PREVSTMTNO,'');
		SET outputBodyRef.SWPTYPE = NULLIF(inputBodyRef.*:SWPTYPE,'');
		SET outputBodyRef.REGCCAVL = NULLIF(inputBodyRef.*:REGCCAVL,'');
		SET outputBodyRef.REGDAPP = NULLIF(inputBodyRef.*:REGDAPP,'');
		SET outputBodyRef.REGDPER = NULLIF(inputBodyRef.*:REGDPER,'');
		SET outputBodyRef.PRDLST = NULLIF(inputBodyRef.*:PRDLST,'');
		SET outputBodyRef.TXNLST = NULLIF(inputBodyRef.*:TXNLST,'');
		SET outputBodyRef.SPCONDLST = NULLIF(inputBodyRef.*:SPCONDLST,'');
		SET outputBodyRef.SPCONDTXN = NULLIF(inputBodyRef.*:SPCONDTXN,'');
		SET outputBodyRef.ODREQ = NULLIF(inputBodyRef.*:ODREQ,'');
		SET outputBodyRef.DAYLIGHTLIMIT = NULLIF(inputBodyRef.*:DAYLIGHTLIMIT,'');
		SET outputBodyRef.ESCROWTRN = NULLIF(inputBodyRef.*:ESCROWTRN,'');
		SET outputBodyRef.ACCOUNTAUTOCLOSED = NULLIF(inputBodyRef.*:ACCOUNTAUTOCLOSED,'');
		SET outputBodyRef.CRS_STST_REQD = NULLIF(inputBodyRef.*:CRS_STST_REQD,'');
		SET outputBodyRef.MT110_RECON_REQD = NULLIF(inputBodyRef.*:MT110_RECON_REQD,'');
		SET outputBodyRef.PROJACC = NULLIF(inputBodyRef.*:PROJACC,'');
		SET outputBodyRef.PRIVATE_CUSTOMER = NULLIF(inputBodyRef.*:PRIVATE_CUSTOMER,'');
		SET outputBodyRef.DFLT_WAIVER = NULLIF(inputBodyRef.*:DFLT_WAIVER,'');
		SET outputBodyRef.AUTO_DEBIT_CARD_REQUEST = NULLIF(inputBodyRef.*:AUTO_DEBIT_CARD_REQUEST,'');
		SET outputBodyRef.AUTO_CHEQUE_BOOK_REQ = NULLIF(inputBodyRef.*:AUTO_CHEQUE_BOOK_REQ,'');
		SET outputBodyRef.NSFBLKSTAT = NULLIF(inputBodyRef.*:NSFBLKSTAT,'');
		SET outputBodyRef.DROVD = NULLIF(inputBodyRef.*:DROVD,'');
		SET outputBodyRef.CROVD = NULLIF(inputBodyRef.*:CROVD,'');
		SET outputBodyRef.SPL_AC_GEN = NULLIF(inputBodyRef.*:SPL_AC_GEN,'');
		SET outputBodyRef.MAKER = NULLIF(inputBodyRef.*:MAKER,'');
		SET outputBodyRef.MAKERSTAMP = NULLIF(inputBodyRef.*:MAKERSTAMP,'');
		SET outputBodyRef.CHECKER = NULLIF(inputBodyRef.*:CHECKER,'');
		SET outputBodyRef.CHECKERSTAMP = NULLIF(inputBodyRef.*:CHECKERSTAMP,'');
		SET outputBodyRef.MODNO = NULLIF(inputBodyRef.*:MODNO,'');
		SET outputBodyRef.TXNSTAT = NULLIF(inputBodyRef.*:TXNSTAT,'');
		SET outputBodyRef.AUTHSTAT = NULLIF(inputBodyRef.*:AUTHSTAT,'');
		SET outputBodyRef."Provision-Main".PRVACCUI = NULLIF(inputBodyRef.*:"Provision-Main".*:PRVACCUI,'');
		SET outputBodyRef."Interim-Details".INTRMSTMTCNT = NULLIF(inputBodyRef.*:"Interim-Details".*:INTRMSTMTCNT,'');
		SET outputBodyRef.Acstatuslines.ACSTATUS = NULLIF(inputBodyRef.*:Acstatuslines.*:ACSTATUS,'');
		SET outputBodyRef.Acstatuslines.DRHOLINE = NULLIF(inputBodyRef.*:Acstatuslines.*:DRHOLINE,'');
		SET outputBodyRef.Acstatuslines.CRHOLINE = NULLIF(inputBodyRef.*:Acstatuslines.*:CRHOLINE,'');
		SET outputBodyRef.Acstatuslines.CRCBLINE = NULLIF(inputBodyRef.*:Acstatuslines.*:CRCBLINE,'');
		SET outputBodyRef.Acstatuslines.DRCBLINE = NULLIF(inputBodyRef.*:Acstatuslines.*:DRCBLINE,'');
		SET outputBodyRef.Acstatuslines.DRGL = NULLIF(inputBodyRef.*:Acstatuslines.*:DRGL,'');
		SET outputBodyRef.Acstatuslines.CRGL = NULLIF(inputBodyRef.*:Acstatuslines.*:CRGL,'');
		SET outputBodyRef.Acstatuslines.DESC = NULLIF(inputBodyRef.*:Acstatuslines.*:DESC,'');

		SET outputBodyRef.Intdetails.CALCACC = NULLIF(inputBodyRef.*:Intdetails.*:CALCACC,'');
		SET outputBodyRef.Intdetails.BOOKACC = NULLIF(inputBodyRef.*:Intdetails.*:BOOKACC,'');
		SET outputBodyRef.Intdetails.HASIS = NULLIF(inputBodyRef.*:Intdetails.*:HASIS,'');
		SET outputBodyRef.Intdetails.INTSTARTDT = NULLIF(inputBodyRef.*:Intdetails.*:INTSTARTDT,'');
		SET outputBodyRef.Intdetails.BOOKACCBRN = NULLIF(inputBodyRef.*:Intdetails.*:BOOKACCBRN,'');
		SET outputBodyRef.Intdetails.DRCRADV = NULLIF(inputBodyRef.*:Intdetails.*:DRCRADV,'');
		SET outputBodyRef.Intdetails.CHGBOOKACCBRN = NULLIF(inputBodyRef.*:Intdetails.*:CHGBOOKACCBRN,'');
		SET outputBodyRef.Intdetails.CHGBOOKACC = NULLIF(inputBodyRef.*:Intdetails.*:CHGBOOKACC,'');
		SET outputBodyRef.Intdetails.CHGSTARTDT = NULLIF(inputBodyRef.*:Intdetails.*:CHGSTARTDT,'');
		SET outputBodyRef.Intdetails.BRN = NULLIF(inputBodyRef.*:Intdetails.*:BRN,'');
		SET outputBodyRef.Intdetails.ACC = NULLIF(inputBodyRef.*:Intdetails.*:ACC,'');
		SET outputBodyRef.Tddetails.AUTOROLL = NULLIF(inputBodyRef.*:Tddetails.*:AUTOROLL,'');
		SET outputBodyRef.Tddetails.CLONMAT = NULLIF(inputBodyRef.*:Tddetails.*:CLONMAT,'');
		SET outputBodyRef.Tddetails.MOVINTUNCLM = NULLIF(inputBodyRef.*:Tddetails.*:MOVINTUNCLM,'');
		SET outputBodyRef.Tddetails.ROLLTYPE = NULLIF(inputBodyRef.*:Tddetails.*:ROLLTYPE,'');
		SET outputBodyRef.Tddetails.MOVPRIUNCLM = NULLIF(inputBodyRef.*:Tddetails.*:MOVPRIUNCLM,'');
		SET outputBodyRef.Tddetails.INTSTDT = NULLIF(inputBodyRef.*:Tddetails.*:INTSTDT,'');
		SET outputBodyRef."Amount-Dates".LCY = NULLIF(inputBodyRef.*:"Amount-Dates".*:LCY,'');
		SET outputBodyRef."Amount-Dates".ACY = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY,'');
		SET outputBodyRef."Amount-Dates".DR_INT_DUE = NULLIF(inputBodyRef.*:"Amount-Dates".*:DR_INT_DUE,'');
		SET outputBodyRef."Amount-Dates".PROVAMT = NULLIF(inputBodyRef.*:"Amount-Dates".*:PROVAMT,'');
		SET outputBodyRef."Amount-Dates".CHG_DUE = NULLIF(inputBodyRef.*:"Amount-Dates".*:CHG_DUE,'');
		SET outputBodyRef."Amount-Dates".WITHDRAWABLE_UNCOLLED_FUND = NULLIF(inputBodyRef.*:"Amount-Dates".*:WITHDRAWABLE_UNCOLLED_FUND,'');
		SET outputBodyRef."Amount-Dates".ACY_OPENING_BAL = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_OPENING_BAL,'');
		SET outputBodyRef."Amount-Dates".LCY_OPENING_BAL = NULLIF(inputBodyRef.*:"Amount-Dates".*:LCY_OPENING_BAL,'');
		SET outputBodyRef."Amount-Dates".ACY_TODAY_TOVER_DR = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_TODAY_TOVER_DR,'');
		SET outputBodyRef."Amount-Dates".LCY_TODAY_TOVER_DR = NULLIF(inputBodyRef.*:"Amount-Dates".*:LCY_TODAY_TOVER_DR,'');
		SET outputBodyRef."Amount-Dates".ACY_TODAY_TOVER_CR = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_TODAY_TOVER_CR,'');
		SET outputBodyRef."Amount-Dates".LCY_TODAY_TOVER_CR = NULLIF(inputBodyRef.*:"Amount-Dates".*:LCY_TODAY_TOVER_CR,'');
		SET outputBodyRef."Amount-Dates".ACY_TANK_CR = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_TANK_CR,'');
		SET outputBodyRef."Amount-Dates".ACY_TANK_DR = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_TANK_DR,'');
		SET outputBodyRef."Amount-Dates".LCY_TANK_CR = NULLIF(inputBodyRef.*:"Amount-Dates".*:LCY_TANK_CR,'');
		SET outputBodyRef."Amount-Dates".LCY_TANK_DR = NULLIF(inputBodyRef.*:"Amount-Dates".*:LCY_TANK_DR,'');
		SET outputBodyRef."Amount-Dates".ACY_TANK_UNCOLLECTED = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_TANK_UNCOLLECTED,'');
		SET outputBodyRef."Amount-Dates".ACY_CURR_BALANCE = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_CURR_BALANCE,'');
		SET outputBodyRef."Amount-Dates".LCY_CURR_BALANCE = NULLIF(inputBodyRef.*:"Amount-Dates".*:LCY_CURR_BALANCE,'');
		SET outputBodyRef."Amount-Dates".ACY_BLOCKED_AMOUNT = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_BLOCKED_AMOUNT,'');
		SET outputBodyRef."Amount-Dates".ACY_AVL_BAL = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_AVL_BAL,'');
		SET outputBodyRef."Amount-Dates".ACY_UNAUTH_DR = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH_DR,'');
		SET outputBodyRef."Amount-Dates".ACY_UNAUTH_TANK_DR = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH_TANK_DR,'');
		SET outputBodyRef."Amount-Dates".ACY_UNAUTH_CR = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH_CR,'');
		SET outputBodyRef."Amount-Dates".ACY_UNAUTH_TANK_CR = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH_TANK_CR,'');
		SET outputBodyRef."Amount-Dates".ACY_UNAUTH_UNCOLLECTED = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH_UNCOLLECTED,'');
		SET outputBodyRef."Amount-Dates".ACY_UNAUTH_TANK_UNCOLLECTED = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH_TANK_UNCOLLECTED,'');
		SET outputBodyRef."Amount-Dates".ACY_ACCRUED_DR_IC = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_ACCRUED_DR_IC,'');
		SET outputBodyRef."Amount-Dates".ACY_ACCRUED_CR_IC = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_ACCRUED_CR_IC,'');
		SET outputBodyRef."Amount-Dates".DATE_LAST_CR_ACTIVITY = NULLIF(inputBodyRef.*:"Amount-Dates".*:DATE_LAST_CR_ACTIVITY,'');
		SET outputBodyRef."Amount-Dates".DATE_LAST_DR_ACTIVITY = NULLIF(inputBodyRef.*:"Amount-Dates".*:DATE_LAST_DR_ACTIVITY,'');
		SET outputBodyRef."Amount-Dates".DATE_LAST_DR = NULLIF(inputBodyRef.*:"Amount-Dates".*:DATE_LAST_DR,'');
		SET outputBodyRef."Amount-Dates".DATE_LAST_CR = NULLIF(inputBodyRef.*:"Amount-Dates".*:DATE_LAST_CR,'');
		SET outputBodyRef."Amount-Dates".ACY_UNCOLLECTED = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_UNCOLLECTED,'');
		SET outputBodyRef."Amount-Dates".AMTAVL = NULLIF(inputBodyRef.*:"Amount-Dates".*:AMTAVL,'');
		SET outputBodyRef."Amount-Dates".DC_ACY_OPEN_BAL = NULLIF(inputBodyRef.*:"Amount-Dates".*:DC_ACY_OPEN_BAL,'');
		SET outputBodyRef."Amount-Dates".DC_LCY_OPEN_BAL = NULLIF(inputBodyRef.*:"Amount-Dates".*:DC_LCY_OPEN_BAL,'');
		SET outputBodyRef."Amount-Dates".DC_ACY_CURR_BAL = NULLIF(inputBodyRef.*:"Amount-Dates".*:DC_ACY_CURR_BAL,'');
		SET outputBodyRef."Amount-Dates".DC_ACY_AVL_BAL = NULLIF(inputBodyRef.*:"Amount-Dates".*:DC_ACY_AVL_BAL,'');
		SET outputBodyRef."Amount-Dates".DIS_UNUTILIZED_AMT = NULLIF(inputBodyRef.*:"Amount-Dates".*:DIS_UNUTILIZED_AMT,'');
		SET outputBodyRef."Amount-Dates".DIS_TOT_AVL_AMOUNT = NULLIF(inputBodyRef.*:"Amount-Dates".*:DIS_TOT_AVL_AMOUNT,'');
		SET outputBodyRef."Amount-Dates".DC_TOT_AVL_AMOUNT = NULLIF(inputBodyRef.*:"Amount-Dates".*:DC_TOT_AVL_AMOUNT,'');
		SET outputBodyRef."Amount-Dates".DC_LCY_CURR_BAL = NULLIF(inputBodyRef.*:"Amount-Dates".*:DC_LCY_CURR_BAL,'');
		SET outputBodyRef."Amount-Dates".ACY_UNAUTH = NULLIF(inputBodyRef.*:"Amount-Dates".*:ACY_UNAUTH,'');
		SET outputBodyRef."Amount-Dates".UTILIZED_AMT = NULLIF(inputBodyRef.*:"Amount-Dates".*:UTILIZED_AMT,'');
		SET outputBodyRef."Amount-Dates".LIMIT_AMOUNT = NULLIF(inputBodyRef.*:"Amount-Dates".*:LIMIT_AMOUNT,'');
		SET outputBodyRef."Amount-Dates".ILM_SWEEP_BAL = NULLIF(inputBodyRef.*:"Amount-Dates".*:ILM_SWEEP_BAL,'');
		SET outputBodyRef."Amount-Dates".SWEEP_ELIG_BAL = NULLIF(inputBodyRef.*:"Amount-Dates".*:SWEEP_ELIG_BAL,'');
		SET outputBodyRef."Amount-Dates".PRINC_OUTSTAND = NULLIF(inputBodyRef.*:"Amount-Dates".*:PRINC_OUTSTAND,'');
		SET outputBodyRef."Amount-Dates".INT_OUTSTAND = NULLIF(inputBodyRef.*:"Amount-Dates".*:INT_OUTSTAND,'');
		SET outputBodyRef."Amount-Dates".CHG_OUTSTAND = NULLIF(inputBodyRef.*:"Amount-Dates".*:CHG_OUTSTAND,'');
		SET outputBodyRef."Amount-Dates".PBKBAL = NULLIF(inputBodyRef.*:"Amount-Dates".*:PBKBAL,'');
		SET outputBodyRef."Amount-Dates".DC_ILM_SWEEP_BAL = NULLIF(inputBodyRef.*:"Amount-Dates".*:DC_ILM_SWEEP_BAL,'');
		SET outputBodyRef."Amount-Dates".AMTDUE = NULLIF(inputBodyRef.*:"Amount-Dates".*:AMTDUE,'');
		SET outputBodyRef."Amount-Dates".Turnovers.ACY_MTD_TOVER_DR = NULLIF(inputBodyRef.*:"Amount-Dates".*:Turnovers.*:ACY_MTD_TOVER_DR,'');
		SET outputBodyRef."Amount-Dates".Turnovers.LCY_MTD_TOVER_DR = NULLIF(inputBodyRef.*:"Amount-Dates".*:Turnovers.*:LCY_MTD_TOVER_DR,'');
		SET outputBodyRef."Amount-Dates".Turnovers.ACY_MTD_TOVER_CR = NULLIF(inputBodyRef.*:"Amount-Dates".*:Turnovers.*:ACY_MTD_TOVER_CR,'');
		SET outputBodyRef."Amount-Dates".Turnovers.LCY_MTD_TOVER_CR = NULLIF(inputBodyRef.*:"Amount-Dates".*:Turnovers.*:LCY_MTD_TOVER_CR,'');
		SET outputBodyRef."Amount-Dates".Turnovers.ACY_TOV = NULLIF(inputBodyRef.*:"Amount-Dates".*:Turnovers.*:ACY_TOV,'');
		SET outputBodyRef."Amount-Dates".Turnovers.LCY_TOV = NULLIF(inputBodyRef.*:"Amount-Dates".*:Turnovers.*:LCY_TOV,'');

		SET outputBodyRef.Noticepref = NULLIF(inputBodyRef.*:Noticepref,'');
		SET outputBodyRef."Cust-Acc-Check" = NULLIF(inputBodyRef.*:"Cust-Acc-Check",'');

		SET outputBodyRef."Custacc-Icccspcn".BRNCD = NULLIF(inputBodyRef.*:"Custacc-Icccspcn".*:BRNCD,'');
		SET outputBodyRef."Custacc-Icccspcn".ACCNO = NULLIF(inputBodyRef.*:"Custacc-Icccspcn".*:ACCNO,'');

		SET outputBodyRef."Custacc-Icchspcn".BRN = NULLIF(inputBodyRef.*:"Custacc-Icchspcn".*:BRN,'');
		SET outputBodyRef."Custacc-Icchspcn".ACC = NULLIF(inputBodyRef.*:"Custacc-Icchspcn".*:ACC,'');

		SET outputBodyRef."Custacc-Iccinstr".BRN = NULLIF(inputBodyRef.*:"Custacc-Iccinstr".*:BRN,'');
		SET outputBodyRef."Custacc-Iccinstr".ACC = NULLIF(inputBodyRef.*:"Custacc-Iccinstr".*:ACC,'');

		SET outputBodyRef.CustAcc.BRN = NULLIF(inputBodyRef.*:CustAcc.*:BRN,'');
		SET outputBodyRef.CustAcc.ACC = NULLIF(inputBodyRef.*:CustAcc.*:ACC,'');

		SET outputBodyRef.CustAcc.Misdetails.POOLCD = NULLIF(inputBodyRef.*:CustAcc.*:Misdetails.*:POOLCD,'');
		SET outputBodyRef.CustAcc.Misdetails.REFRTTYPE = NULLIF(inputBodyRef.*:CustAcc.*:Misdetails.*:REFRTTYPE,'');
		SET outputBodyRef.CustAcc.Misdetails.CALCMETH = NULLIF(inputBodyRef.*:CustAcc.*:Misdetails.*:CALCMETH,'');
		SET outputBodyRef.CustAcc.Misdetails.TXNMIS1 = NULLIF(inputBodyRef.*:CustAcc.*:Misdetails.*:TXNMIS1,'');
		SET outputBodyRef.CustAcc.Misdetails.TXNMIS2 = NULLIF(inputBodyRef.*:CustAcc.*:Misdetails.*:TXNMIS2,'');
		SET outputBodyRef.CustAcc.Misdetails.COMPMIS3 = NULLIF(inputBodyRef.*:CustAcc.*:Misdetails.*:COMPMIS3,'');
		SET outputBodyRef.CustAcc.Misdetails.RTFLAG = NULLIF(inputBodyRef.*:CustAcc.*:Misdetails.*:RTFLAG,'');

		SET outputBodyRef."Custacc-Sicdiary" = NULLIF(inputBodyRef.*:"Custacc-Sicdiary",'');

		SET outputBodyRef."Custacc-Stccusbl".BRN = NULLIF(inputBodyRef.*:"Custacc-Stccusbl".*:BRN,'');
		SET outputBodyRef."Custacc-Stccusbl".ACCNO = NULLIF(inputBodyRef.*:"Custacc-Stccusbl".*:ACCNO,'');

		DECLARE I INTEGER 1;
		DECLARE inRef REFERENCE TO inputBodyRef.*:UDFDETAILS[>];
		WHILE LASTMOVE(inRef) DO
			SET outputBodyRef.UDFDETAILS[I].FLDNAM = NULLIF(inRef.*:FLDNAM,'');
			SET outputBodyRef.UDFDETAILS[I].FLDVAL = NULLIF(inRef.*:FLDNVAL,'');
			SET I = I + 1;
			MOVE inRef NEXTSIBLING REPEAT TYPE NAME;
		END WHILE;

		SET outputBodyRef."Acc-Svcacsig".ACBRN1 = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:ACBRN1,'');
		SET outputBodyRef."Acc-Svcacsig".ACTNO = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:ACTNO,'');
		SET outputBodyRef."Acc-Svcacsig".ACDESC = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:ACDESC,'');
		SET outputBodyRef."Acc-Svcacsig".ACCMSG = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:ACCMSG,'');
		SET outputBodyRef."Acc-Svcacsig".MINNOSIG = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:MINNOSIG,'');
		SET outputBodyRef."Acc-Svcacsig".ACCCY = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:ACCCY,'');
		SET outputBodyRef."Acc-Svcacsig".Accsigdetails.CUST_ID = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:CUST_ID,'');
		SET outputBodyRef."Acc-Svcacsig".Accsigdetails.RELATIONTYP = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:RELATIONTYP,'');
		SET outputBodyRef."Acc-Svcacsig".Accsigdetails.SIGID = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:SIGID,'');
		SET outputBodyRef."Acc-Svcacsig".Accsigdetails.SIGMSG = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:SIGMSG,'');
		SET outputBodyRef."Acc-Svcacsig".Accsigdetails.SIGTYPE = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:SIGTYPE,'');
		SET outputBodyRef."Acc-Svcacsig".Accsigdetails.APPROVLIMIT = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:APPROVLIMIT,'');
		SET outputBodyRef."Acc-Svcacsig".Accsigdetails.SIGNAME = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:SIGNAME,'');

		SET outputBodyRef."Acc-Svcacsig".Accsigdetails.SOLOSIG = NULLIF(inputBodyRef.*:"Acc-Svcacsig".*:Accsigdetails.*:SOLOSIG,'');

		SET outputBodyRef."Custacc-Iccintpo".BRANCH_CODE = NULLIF(inputBodyRef.*:"Custacc-Iccintpo".*:BRANCH_CODE,'');
		SET outputBodyRef."Custacc-Iccintpo".CUST_AC_NO = NULLIF(inputBodyRef.*:"Custacc-Iccintpo".*:CUST_AC_NO,'');
		SET outputBodyRef."Custacc-Iccintpo".CCY = NULLIF(inputBodyRef.*:"Custacc-Iccintpo".*:CCY,'');

		SET outputBodyRef."Customer-Acc".BRANCH_CODE = NULLIF(inputBodyRef.*:"Customer-Acc".*:BRANCH_CODE,'');
		SET outputBodyRef."Customer-Acc".CUST_AC_NO = NULLIF(inputBodyRef.*:"Customer-Acc".*:CUST_AC_NO,'');

		SET outputBodyRef."Sttms-Cust-Acc-Swp".BRANCH_CODE = NULLIF(inputBodyRef.*:"Sttms-Cust-Acc-Swp".*:BRANCH_CODE,'');
		SET outputBodyRef."Sttms-Cust-Acc-Swp".CUST_AC_NO = NULLIF(inputBodyRef.*:"Sttms-Cust-Acc-Swp".*:CUST_AC_NO,'');

		SET outputBodyRef."Acc-Chnl".BRANCH_CODE = NULLIF(inputBodyRef.*:"Acc-Chnl".*:BRANCH_CODE,'');
		SET outputBodyRef."Acc-Chnl".CUST_AC_NO = NULLIF(inputBodyRef.*:"Acc-Chnl".*:CUST_AC_NO,'');

		SET I = 1;
		MOVE inRef TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_BODY.*:FCUBS_WARNING_RESP.*:WARNING[>];
		WHILE LASTMOVE(inRef) DO
			SET outputBodyRefer.FCUBS_WARNING_RESP.WARNING[I].WCODE = NULLIF(inRef.*:WCODE,'');
			SET outputBodyRefer.FCUBS_WARNING_RESP.WARNING[I].WDESC = NULLIF(inRef.*:WDESC,'');
			SET I = I + 1;
			MOVE inRef NEXTSIBLING REPEAT TYPE NAME;
		END WHILE;


		SET I = 1;
		MOVE inRef TO InputRoot.SOAP.Body.*:QUERYCUSTACC_IOFS_RES.*:FCUBS_BODY.*:FCUBS_ERROR_RESP.*:ERROR[>];
		WHILE LASTMOVE(inRef) DO
			SET outputBodyRefer.FCUBS_ERROR_RESP.ERROR[I].ECODE = NULLIF(inRef.*:ECODE,'');
			SET outputBodyRefer.FCUBS_ERROR_RESP.ERROR[I].EDESC = NULLIF(inRef.*:EDESC,'');
			SET I = I + 1;
			MOVE inRef NEXTSIBLING REPEAT TYPE NAME;
		END WHILE;

		SET Environment.outputData = OutputRoot.SOAP;
		---------------------- Response Logging -------------------------
		MOVE domainDataRef TO Environment.outputData;
		SET Environment.resPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		SET OutputRoot.SOAP = NULL;
		-- CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		-- MOVE OutRef TO OutputRoot.XMLNSC;
		-- CALL PayloadLogging(envRef.id,Environment.reqPayload,'CHANNEL_RESP',MessageFlowLabel,OutRef);

		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.HTTPResponseHeader = InputRoot.HTTPResponseHeader;
		SET OutputRoot.SOAP = Environment.outputData;

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -------- CHANNEL_RESP -------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'CHANNEL_RESP data is: '||Environment.resPayload) INTO rc;

		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = envRef.ReplyIdentifier;
	END;
END MODULE;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


CREATE COMPUTE MODULE BankAccountDetails_BuildExceptionResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL BuildExceptionResponse();
		RETURN TRUE;
	END;

	CREATE PROCEDURE BuildExceptionResponse() BEGIN
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'..............Error Logging Started...........') INTO rc;
		--DECLARE inRef REFERENCE TO InputRoot.SOAP;
		DECLARE envRef REFERENCE TO Environment.Variables;
		DECLARE enRef REFERENCE TO Environment;
		DECLARE outRefer,outRef REFERENCE TO OutputRoot;
		--DECLARE encodeID INTEGER InputRoot.Properties.Encoding;
		--DECLARE ccsID INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		DECLARE domainDataRef REFERENCE TO InputBody;
		DECLARE excpRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		DECLARE excpPayload CHARACTER getPayLoad(domainName,domainDataRef,envRef.Encoding,envRef.CodedCharSetId);
		CREATE LASTCHILD OF Environment AS enRef DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'soapenv' NAME 'Envelope';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'soapenv' NAME 'Body';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'esb' NAME ApplicationLabel;
		CALL BuildExceptionDetails(excpRef,enRef,ApplicationLabel);
		SET envRef.UserDefinedException = Environment.XMLNSC;
		MOVE domainDataRef TO Environment.XMLNSC;
		SET domainName = FIELDNAME(domainDataRef);
		DECLARE resPayload CHAR getPayLoad(domainName,domainDataRef,envRef.Encoding,envRef.CodedCharSetId);
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Application Built Exception:'||resPayload) INTO rc;
		DECLARE inputRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF OutputRoot.XMLNSC NAME 'ExceptionDetails';
		DECLARE outExcpRef REFERENCE TO OutputRoot.XMLNSC.ExceptionDetails;
		SET outExcpRef.Msg_Id = envRef.id;
		SET outExcpRef.ExceptionType = inputRef.excpType;
		SET outExcpRef.ExceptionNumber = inputRef.excpNumber;
		SET outExcpRef.ExceptionLable = inputRef.excpLable;
		SET outExcpRef.ExceptionDescription = inputRef.excpText;
		SET outExcpRef.ActualExceptionText = inputRef.actualExcpText;

		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = envRef.ReplyIdentifier;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'..............End of Error Logging ...........') INTO rc;
	END;
END MODULE;