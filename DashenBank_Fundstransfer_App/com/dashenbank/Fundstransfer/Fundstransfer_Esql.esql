

BROKER SCHEMA com.dashenbank.Fundstransfer
PATH com.dashenbank.genericfunctions;
DECLARE ns NAMESPACE 'http://localhost:7800/RTSERVICE/';

DECLARE LOG4J_CONFIG_PATH, LOG4J_ERROR_MSG, BACKEND_URL, LOGGER_NAME, LOG_TYPE EXTERNAL CHARACTER;
------------- Global Variable-----------
DECLARE rc BOOLEAN TRUE;

CREATE COMPUTE MODULE RequestToBackend

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL initLog4j(LOG4J_CONFIG_PATH) INTO rc;
		IF (rc = TRUE) THEN
			CALL RequestToBackend();
		ELSE
			SET OutputRoot.SOAP.Body.Log.Message = LOG4J_ERROR_MSG;
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE RequestToBackend() BEGIN
		
		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE ccidRef, encodeRef INTEGER;
		DECLARE envRef REFERENCE TO Environment.Variables;
		CREATE LASTCHILD OF Environment AS envRef NAME 'Variables';

		SET Environment.domainDataRef = InputRoot.SOAP;
		SET ccidRef = InputRoot.Properties.CodedCharSetId;
		SET encodeRef = InputRoot.Properties.Encoding;
		SET envRef.Encoding = encodeRef;
		SET envRef.CodedCharSetId = ccidRef;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);

		SET envRef.RequestIdentifier = CAST(InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier AS CHARACTER);
		SET envRef.ReplyIdentifier = InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier;
		SET Environment.reqPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		SET envRef.id = InputRoot.SOAP.Body.*:CREATETRANSACTION_FSFS_REQ.*:FCUBS_HEADER.*:MSGID;
		----------------------Request Logging-------------------------
		-- CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		-- DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		-- CALL PayloadLogging(envRef.id,Environment.reqPayload,'CHANNEL_REQ',ApplicationLabel,OutRef);

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ CHANNEL_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'CHANNEL_REQ data is: '||Environment.reqPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -----------------------------------------------------------------------') INTO rc;
		----------------- Generating request to flexcube ----------------
		DECLARE inputHeaderRef REFERENCE TO InputRoot.SOAP.Body.*:CREATETRANSACTION_FSFS_REQ.*:FCUBS_HEADER;
		DECLARE inputBodyref REFERENCE TO InputRoot.SOAP.Body.*:CREATETRANSACTION_FSFS_REQ.*:FCUBS_BODY.*:"Transaction-Details";
				
		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';
		SET OutputRoot.SOAP.Context = InputRoot.SOAP.Context;
		
		CREATE LASTCHILD OF OutputRoot.SOAP NAME 'Body';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body NAMESPACE ns NAME 'CREATETRANSACTION_FSFS_RES';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:CREATETRANSACTION_FSFS_RES NAMESPACE ns NAME 'FCUBS_HEADER';		
		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:CREATETRANSACTION_FSFS_RES NAMESPACE ns NAME 'FCUBS_BODY';
		
		DECLARE outputBodyRef REFERENCE TO OutputRoot.SOAP.Body.ns:CREATETRANSACTION_FSFS_RES.ns:FCUBS_BODY;
		DECLARE outputHeaderRef REFERENCE TO OutputRoot.SOAP.Body.ns:CREATETRANSACTION_FSFS_RES.ns:FCUBS_HEADER;
		
        SET outputHeaderRef.ns:SOURCE = inputHeaderRef.*:SOURCE;
		SET outputHeaderRef.ns:UBSCOMP = inputHeaderRef.*:UBSCOMP;
		SET outputHeaderRef.ns:MSGID = inputHeaderRef.*:MSGID;
		SET outputHeaderRef.ns:CORRELID = inputHeaderRef.*:CORRELID;
		SET outputHeaderRef.ns:USERID = inputHeaderRef.*:USERID;
		SET outputHeaderRef.ns:BRANCH = inputHeaderRef.*:BRANCH;
		SET outputHeaderRef.ns:MODULEID = inputHeaderRef.*:MODULEID;
		SET outputHeaderRef.ns:SERVICE = inputHeaderRef.*:SERVICE;
		SET outputHeaderRef.ns:OPERATION = inputHeaderRef.*:OPERATION;
		SET outputHeaderRef.ns:SOURCE_OPERATION = inputHeaderRef.*:SOURCE_OPERATION;
		SET outputHeaderRef.ns:MSGSTAT = inputHeaderRef.*:MSGSTAT;

		SET outputBodyRef.ns:"Transaction-Details".ns:XREF = inputBodyref.*:XREF;
		SET outputBodyRef.ns:"Transaction-Details".ns:PRD = inputBodyref.*:PRD;
		SET outputBodyRef.ns:"Transaction-Details".ns:BRN = inputBodyref.*:BRN;
		SET outputBodyRef.ns:"Transaction-Details".ns:TXNBRN = inputBodyref.*:TXNBRN;
		SET outputBodyRef.ns:"Transaction-Details".ns:TXNACC = inputBodyref.*:TXNACC;
		SET outputBodyRef.ns:"Transaction-Details".ns:TXNCCY = inputBodyref.*:TXNCCY;
		SET outputBodyRef.ns:"Transaction-Details".ns:TXNAMT = inputBodyref.*:TXNAMT;
		SET outputBodyRef.ns:"Transaction-Details".ns:TXNTRN = inputBodyref.*:TXNTRN;
		SET outputBodyRef.ns:"Transaction-Details".ns:OFFSETBRN = inputBodyref.*:OFFSETBRN;
		SET outputBodyRef.ns:"Transaction-Details".ns:OFFSETACC = inputBodyref.*:OFFSETACC;
		SET outputBodyRef.ns:"Transaction-Details".ns:OFFSETCCY = inputBodyref.*:OFFSETCCY;
		SET outputBodyRef.ns:"Transaction-Details".ns:OFFSETAMT = inputBodyref.*:OFFSETAMT;
		SET outputBodyRef.ns:"Transaction-Details".ns:OFFSETTRN = inputBodyref.*:OFFSETTRN;
		SET outputBodyRef.ns:"Transaction-Details".ns:XRATE = inputBodyref.*:XRATE;
		SET outputBodyRef.ns:"Transaction-Details".ns:TXNDATE = inputBodyref.*:TXNDATE;
		SET outputBodyRef.ns:"Transaction-Details".ns:VALDATE = inputBodyref.*:VALDATE;
		SET outputBodyRef.ns:"Transaction-Details".ns:NARRATIVE = inputBodyref.*:NARRATIVE;
		SET Environment.outputData = OutputRoot.SOAP;
		----------------------Response Logging-------------------------
		MOVE domainDataRef TO OutputRoot.SOAP;
		SET Environment.resPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		SET OutputRoot.SOAP = NULL;
		-- CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		-- MOVE OutRef TO OutputRoot.XMLNSC;
		-- CALL PayloadLogging(envRef.id,Environment.resPayload,'BACKEND_REQ',MessageFlowLabel,OutRef);

		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.HTTPInputHeader = InputRoot.HTTPInputHeader;
		SET OutputRoot.SOAP = Environment.outputData;

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ BACKEND_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'BACKEND_REQ data is: '||Environment.resPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -----------------------------------------------------------------------') INTO rc;

		SET OutputLocalEnvironment.Destination.SOAP.Request.Transport.HTTP.WebServiceURL = BACKEND_URL;
	END;
END MODULE;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE COMPUTE MODULE ResponseToChannel

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL ResponseToChannel();
		RETURN TRUE;
	END;
	CREATE PROCEDURE ResponseToChannel() BEGIN
		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE ccidRef, encodeRef INTEGER;
		DECLARE envRef REFERENCE TO Environment.Variables;

		SET ccidRef = InputRoot.Properties.CodedCharSetId;
		SET encodeRef = InputRoot.Properties.Encoding;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		SET Environment.reqPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		----------------------Request Logging-------------------------
		-- CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		-- DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		-- CALL PayloadLogging(envRef.id,Environment.reqPayload,'FLEXCUBE_RES',ApplicationLabel,OutRef);

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------- BACKEND_RESP -------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'BACKEND_RESP data  is: '||Environment.reqPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ----------------------------------------------------------------------') INTO rc;
		--------------- Generating response to channel ---------------
		DECLARE inputHeaderRef REFERENCE TO InputRoot.SOAP.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_HEADER;
		DECLARE inputBodyRef REFERENCE TO InputRoot.SOAP.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details";
		DECLARE inputWarningRef REFERENCE TO InputRoot.SOAP.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:FCUBS_WARNING_RESP.*:WARNING;

		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';
		SET OutputRoot.SOAP.Context = InputRoot.SOAP.Context;
		CREATE LASTCHILD OF OutputRoot.SOAP NAME 'Body';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body NAMESPACE ns NAME 'CREATETRANSACTION_FSFS_RES';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:CREATETRANSACTION_FSFS_RES NAMESPACE ns NAME 'FCUBS_HEADER';
		CREATE LASTCHILD OF OutputRoot.SOAP.Body.ns:CREATETRANSACTION_FSFS_RES NAMESPACE ns NAME 'FCUBS_BODY';
		
		DECLARE outputHeaderRef REFERENCE TO OutputRoot.SOAP.Body.ns:CREATETRANSACTION_FSFS_RES.FCUBS_HEADER;
		DECLARE outputBodyRef REFERENCE TO OutputRoot.SOAP.Body.ns:CREATETRANSACTION_FSFS_RES.FCUBS_BODY;
		
		SET outputBodyRef.ns:SOURCE = inputHeaderRef.*:SOURCE;
		SET outputBodyRef.ns:UBSCOMP = inputHeaderRef.*:UBSCOMP;
		SET outputBodyRef.ns:MSGID = inputHeaderRef.*:MSGID;
		SET outputBodyRef.ns:CORRELID = inputHeaderRef.*:CORRELID;
		SET outputBodyRef.ns:USERID = inputHeaderRef.*:USERID;
		SET outputBodyRef.ns:ENTITY = inputHeaderRef.*:ENTITY;
		SET outputBodyRef.ns:BRANCH = inputHeaderRef.*:BRANCH;
		SET outputBodyRef.ns:MODULEID = inputHeaderRef.*:MODULEID;
		SET outputBodyRef.ns:SERVICE = inputHeaderRef.*:SERVICE;
		SET outputBodyRef.ns:OPERATION = inputHeaderRef.*:OPERATION;
		SET outputBodyRef.ns:SOURCE_USERID = inputHeaderRef.*:SOURCE_USERID;
		SET outputBodyRef.ns:DESTINATION = inputHeaderRef.*:DESTINATION;
		SET outputBodyRef.ns:MULTITRIPID = inputHeaderRef.*:MULTITRIPID;
		SET outputBodyRef.ns:FUNCTIONID = inputHeaderRef.*:FUNCTIONID;
		SET outputBodyRef.ns:ACTION = inputHeaderRef.*:ACTION;
		SET outputBodyRef.ns:MSGSTAT = inputHeaderRef.*:MSGSTAT;
		SET outputBodyRef.ns:SNAPSHOTID = inputHeaderRef.*:SNAPSHOTID;
		SET outputBodyRef.ns:PASSWORD = inputHeaderRef.*:PASSWORD;
		
		DECLARE I INTEGER 1;
		DECLARE inRef REFERENCE TO inputHeaderRef.*:ADDL.*:PARAM[>];
		WHILE LASTMOVE(inRef) DO
			SET outputBodyRef.ns:ADDL.ns:PARAM[I].NAME = inRef.NAME;
			SET outputBodyRef.ns:ADDL.ns:PARAM[I].VALUE = inRef.VALUE;
			SET I = I + 1;
			MOVE inRef NEXTSIBLING REPEAT TYPE NAME;
		END WHILE;
		
		
		
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:XREF = inputBodyRef.*:XREF;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:CCREF = inputBodyRef.*:FCCREF;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:PRD = inputBodyRef.*:PRD;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:BRN = inputBodyRef.*:BRN;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:TXNBRN = inputBodyRef.*:TXNBRN;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:TXNACC = inputBodyRef.*:TXNACC;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:TXNCCY = inputBodyRef.*:TXNCCY;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:TXNAMT = inputBodyRef.*:TXNAMT;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:TXNTRN = inputBodyRef.*:TXNTRN;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:OFFSETBRN = inputBodyRef.*:OFFSETBRN;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:OFFSETACC = inputBodyRef.*:OFFSETACC;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:OFFSETCCY = inputBodyRef.*:OFFSETCCY;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:OFFSETAMT = inputBodyRef.*:OFFSETAMT;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:OFFSETTRN = inputBodyRef.*:OFFSETTRN;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:XRATE = inputBodyRef.*:XRATE;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:LCYAMT = inputBodyRef.*:LCYAMT;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:TXNDATE = inputBodyRef.*:TXNDATE;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:VALDATE = inputBodyRef.*:VALDATE;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:RELCUST = inputBodyRef.*:RELCUST;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:TCYCHGAMT = inputBodyRef.*:TCYCHGAMT;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:TCYTOTCHGAMT = inputBodyRef.*:TCYTOTCHGAMT;

		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:NARRATIVE = inputBodyRef.*:NARRATIVE;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:TRACKREVERSE = inputBodyRef.*:TRACKREVERSE;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:LCYXRATE = inputBodyRef.*:LCYXRATE;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:MAKERID = inputBodyRef.*:MAKERID;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:MAKERSTAMP = inputBodyRef.*:MAKERSTAMP;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:CHECKERID = inputBodyRef.*:CHECKERID;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:CHECKERSTAMP = inputBodyRef.*:CHECKERSTAMP;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:RECSTAT = inputBodyRef.*:RECSTAT;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:AUTHSTAT = inputBodyRef.*:AUTHSTAT;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:LCYCHGAMT = inputBodyRef.*:LCYCHGAMT;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:DRACC = inputBodyRef.*:DRACC;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:TXNDRCR = inputBodyRef.*:TXNDRCR;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:BOOKDATE = inputBodyRef.*:BOOKDATE;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:FT = inputBodyRef.*:FT;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:LCYTOTCHGAMT = inputBodyRef.*:LCYTOTCHGAMT;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:DENMCCY1 = inputBodyRef.*:DENMCCY1;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:DENMAMT1 = inputBodyRef.*:DENMAMT1;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:DENMAMT2 = inputBodyRef.*:DENMAMT2;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:ACCTITLE1 = inputBodyRef.*:ACCTITLE1;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:ACCTITLE2 = inputBodyRef.*:ACCTITLE2;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:ACTAMT = inputBodyRef.*:ACTAMT;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:CHRACC = inputBodyRef.*:CHRACC;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:CUSTNAME = inputBodyRef.*:CUSTNAME;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Charge-Details".*:CHGCOMP = inputBodyRef.*:"Charge-Details".*:CHGCOMP;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Charge-Details".*:CHGAMT = inputBodyRef.*:"Charge-Details".*:CHGAMT;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Charge-Details".*:CHGCCY = inputBodyRef.*:"Charge-Details".*:CHGCCY;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Charge-Details".*:MISHEAD = inputBodyRef.*:"Charge-Details".*:MISHEAD;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Charge-Details".*:TXNCODE = inputBodyRef.*:"Charge-Details".*:TXNCODE;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Charge-Details".*:NETTINGIND = inputBodyRef.*:"Charge-Details".*:NETTINGIND;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Charge-Details".*:CHGGL = inputBodyRef.*:"Charge-Details".*:CHGGL;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Charge-Details".*:TYPE = inputBodyRef.*:"Charge-Details".*:TYPE;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Charge-Details".*:LCYCHG = inputBodyRef.*:"Charge-Details".*:LCYCHG;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Charge-Details".*:XRATE = inputBodyRef.*:"Charge-Details".*:XRATE;

		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:BRANCH = inputBodyRef.*:"Mis-Details".*:BRANCH;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:CUSTNO = inputBodyRef.*:"Mis-Details".*:CUSTNO;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:CCY = inputBodyRef.*:"Mis-Details".*:CCY;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:RTFLAG = inputBodyRef.*:"Mis-Details".*:RTFLAG;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:FUNDMIS1LBL1 = inputBodyRef.*:"Mis-Details".*:FUNDMIS1LBL1;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:COMPMIS3LBL3 = inputBodyRef.*:"Mis-Details".*:COMPMIS3LBL3;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:TXNMIS1LBL1 = inputBodyRef.*:"Mis-Details".*:TXNMIS1LBL1;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:"Transaction-Details".*:"Mis-Details".*:TXNMIS2LBL2 = inputBodyRef.*:"Mis-Details".*:TXNMIS2LBL2;

		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:FCUBS_WARNING_RESP.*:WARNING.*:WCODE = inputWarningRef.*:WCODE;
		SET outputbodyRef.Body.*:CREATETRANSACTION_FSFS_RES.*:FCUBS_BODY.*:FCUBS_WARNING_RESP.*:WARNING.*:WDESC = inputWarningRef.*:WDESC;
		
		SET Environment.outputData = OutputRoot.SOAP;
		---------------------- Response Logging -------------------------
		MOVE domainDataRef TO OutputRoot.SOAP;
		SET Environment.resPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		-- CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		-- MOVE OutRef TO OutputRoot.XMLNSC;
		-- CALL PayloadLogging(envRef.id,Environment.reqPayload,'CHANNEL_RESP',MessageFlowLabel,OutRef);

		SET OutputRoot.Properties = InputRoot.Properties;
		-- SET OutputRoot.HTTPResponseHeader = InputRoot.HTTPResponseHeader;
		SET OutputRoot.SOAP = Environment.outputData;

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -------- CHANNEL_RESP -------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'CHANNEL_RESP data is: '||Environment.resPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'**********************************************************************') INTO rc;

		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = envRef.ReplyIdentifier;
	END;
END MODULE;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



CREATE COMPUTE MODULE BuildExceptionResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL BuildExceptionResponse();
		RETURN TRUE;
	END;

	CREATE PROCEDURE BuildExceptionResponse() BEGIN
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'..............Error Logging Started...........') INTO rc;
		--DECLARE inRef REFERENCE TO InputRoot.SOAP;
		DECLARE envRef REFERENCE TO Environment.Variables;
		DECLARE enRef REFERENCE TO Environment;
		DECLARE outRefer,outRef REFERENCE TO OutputRoot;
		--DECLARE encodeID INTEGER InputRoot.Properties.Encoding;
		--DECLARE ccsID INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		DECLARE domainDataRef REFERENCE TO InputBody;
		DECLARE excpRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		DECLARE excpPayload CHARACTER getPayLoad(domainName,domainDataRef,envRef.Encoding,envRef.CodedCharSetId);
		CREATE LASTCHILD OF Environment AS enRef DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'soapenv' NAME 'Envelope';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'soapenv' NAME 'Body';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'esb' NAME ApplicationLabel;
		CALL BuildExceptionDetails(excpRef,enRef,ApplicationLabel);
		SET envRef.UserDefinedException = Environment.XMLNSC;
		MOVE domainDataRef TO Environment.XMLNSC;
		SET domainName = FIELDNAME(domainDataRef);
		DECLARE resPayload CHAR getPayLoad(domainName,domainDataRef,envRef.Encoding,envRef.CodedCharSetId);
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Application Built Exception:'||resPayload) INTO rc;
		DECLARE inputRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF OutputRoot.XMLNSC NAME 'ExceptionDetails';
		DECLARE outExcpRef REFERENCE TO OutputRoot.XMLNSC.ExceptionDetails;
		SET outExcpRef.Msg_Id = envRef.id;
		SET outExcpRef.ExceptionType = inputRef.excpType;
		SET outExcpRef.ExceptionNumber = inputRef.excpNumber;
		SET outExcpRef.ExceptionLable = inputRef.excpLable;
		SET outExcpRef.ExceptionDescription = inputRef.excpText;
		SET outExcpRef.ActualExceptionText = inputRef.actualExcpText;

		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = envRef.ReplyIdentifier;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'..............End of Error Logging ...........') INTO rc;
	END;
END MODULE;