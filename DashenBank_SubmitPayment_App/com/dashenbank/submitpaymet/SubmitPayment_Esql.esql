

BROKER SCHEMA com.dashenbank.submitpaymet
PATH com.dashenbank.genericfunctions;
--DECLARE ns NAMESPACE 'https://www.fintech-group.com/services/Finpay';
--DECLARE soapenv NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';
--DECLARE esb NAMESPACE 'http://www.dashenbank.org/ESB_SubmitPaymentService/';

DECLARE LOG_CONFIG_PATH EXTERNAL CHARACTER;
DECLARE LOG4J_ERROR_MSG EXTERNAL CHARACTER;
DECLARE BACKEND_URL EXTERNAL CHARACTER;
DECLARE LOGGER_NAME EXTERNAL CHARACTER;
DECLARE LOG_TYPE EXTERNAL CHARACTER;
DECLARE rc BOOLEAN TRUE;
CREATE COMPUTE MODULE RequestToBackend
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL initLog4j(LOG_CONFIG_PATH) INTO rc;
		IF (rc = TRUE) THEN
			CALL request_from_channnel();
		ELSE
			SET OutputRoot.SOAP.Body.Log.Message = LOG4J_ERROR_MSG;
		END IF;
		RETURN TRUE;
	END;
	CREATE PROCEDURE request_from_channnel() BEGIN
		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE envRef REFERENCE TO Environment.Variables;
		CREATE LASTCHILD OF Environment AS envRef NAME 'Variables';

		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE ccidRef INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE encodeRef INTEGER InputRoot.Properties.Encoding;
		SET envRef.Encoding = encodeRef;
		SET envRef.CodedCharSetId = ccidRef;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);

		SET envRef.RequestIdentifier = CAST(InputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier AS CHARACTER);
		SET Environment.reqPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		SET envRef.id = InputRoot.SOAP.Body.*:SubmitPayment.*:providerID;
		------------------- Request Logging -------------------------
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		CALL PayloadLogging(envRef.id,Environment.reqPayload,'CHANNEL_REQ',ApplicationLabel,OutRef);

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ CHANNEL_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'CHANNEL_REQ data is: '||Environment.reqPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -----------------------------------------------------------------------') INTO rc;
		------------------- Generating request to Backend ---------------------
		DECLARE inputBodyRef REFERENCE To InputRoot.SOAP.Body.*:SubmitPayment;
		DECLARE inBodyRef REFERENCE To InputRoot.SOAP.Body.*:SubmitPayment.*:SubmitPaymentRequest;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';
		DECLARE outputSoapRef REFERENCE TO OutputRoot.SOAP;

		SET outputSoapRef.Body.*:SubmitPayment.*:providerID = inputBodyRef.*:providerID;
		SET outputSoapRef.Body.*:SubmitPayment.*:appcode = inputBodyRef.*:appcode;
		SET outputSoapRef.Body.*:SubmitPayment.*:apppassphrase = inputBodyRef.*:apppassphrase;
		SET outputSoapRef.Body.*:SubmitPayment.*:token = inputBodyRef.*:token;
		SET outputSoapRef.Body.*:SubmitPayment.*:licenseNumber = inputBodyRef.*:licenseNumber;
		SET outputSoapRef.Body.*:SubmitPayment.*:SubmitPaymentRequest.*:PaymentOrderNo = inBodyRef.*:PaymentOrderNo;
		SET outputSoapRef.Body.*:SubmitPayment.*:SubmitPaymentRequest.*:ReceiptNo = inBodyRef.*:ReceiptNo;
		SET outputSoapRef.Body.*:SubmitPayment.*:SubmitPaymentRequest.*:CheckNo = inBodyRef.*:CheckNo;
		SET outputSoapRef.Body.*:SubmitPayment.*:SubmitPaymentRequest.*:CashierName = inBodyRef.*:CashierName;
		SET outputSoapRef.Body.*:SubmitPayment.*:SubmitPaymentRequest.*:BankCode = inBodyRef.*:BankCode;
		SET outputSoapRef.Body.*:SubmitPayment.*:SubmitPaymentRequest.*:BankName = inBodyRef.*:BankName;
		SET outputSoapRef.Body.*:SubmitPayment.*:SubmitPaymentRequest.*:PaymentMethod = inBodyRef.*:PaymentMethod;
		SET outputSoapRef.Body.*:SubmitPayment.*:SubmitPaymentRequest.*:UserID = inBodyRef.*:UserID;
		SET outputSoapRef.Body.*:SubmitPayment.*:SubmitPaymentRequest.*:LocationCode = inBodyRef.*:LocationCode;
		SET Environment.outputData = OutputRoot.SOAP;
		---------------------- Response Logging -------------------------
		MOVE domainDataRef TO OutputRoot.SOAP;
		SET Environment.resPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		SET OutputRoot.SOAP = NULL;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		MOVE OutRef TO OutputRoot.XMLNSC;
		CALL PayloadLogging(envRef.id,Environment.resPayload,'BACKEND_REQ',MessageFlowLabel,OutRef);

		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.SOAP = Environment.outputData;

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------ BACKEND_REQ ------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'BACKEND_REQ data is: '||Environment.resPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -----------------------------------------------------------------------') INTO rc;

		SET OutputLocalEnvironment.Destination.SOAP.Request.Transport.HTTP.WebServiceURL = BACKEND_URL;
	END;
END MODULE;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE COMPUTE MODULE ResponseToChannel

	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL response_from_Backend();
		RETURN TRUE;
	END;
	CREATE PROCEDURE response_from_Backend() BEGIN

		SET Environment.domainDataRef = InputRoot.SOAP;
		DECLARE envRef REFERENCE TO Environment.Variables;
		DECLARE ccidRef INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE encodeRef INTEGER InputRoot.Properties.Encoding;
		DECLARE domainDataRef REFERENCE TO InputRoot.SOAP;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);

		SET Environment.reqPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		---------------------- Request Logging -------------------------
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC;
		CALL PayloadLogging(envRef.id,Environment.reqPayload,'BACKEND_RES',ApplicationLabel,OutRef);

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ------- BACKEND_RES -------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'BACKEND_RES data  is: '||Environment.reqPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' ----------------------------------------------------------------------') INTO rc;
		------------------ generating response to channel ---------------
		DECLARE inputBodyRef REFERENCE To InputRoot.SOAP.Body.*:SubmitPaymentResponse.*:SubmitPaymentResult.*:SubmitPaymentResponse.*:UtilAPISubmitPaymentResponse;
		DECLARE inBodyRef REFERENCE To InputRoot.SOAP.Body.*:SubmitPaymentResponse.*:SubmitPaymentResult.*:SubmitPaymentResponse;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'SOAP';
		DECLARE outputSoapRef REFERENCE TO OutputRoot.SOAP;

		SET outputSoapRef.Body.*:SubmitPaymentResponse.*:SubmitPaymentResult.*:SubmitPaymentResponse.*:UtilAPISubmitPaymentResponse.*:IsSaved = inputBodyRef.*:IsSaved;
		SET outputSoapRef.Body.*:SubmitPaymentResponse.*:SubmitPaymentResult.*:SubmitPaymentResponse.*:UtilAPISubmitPaymentResponse.*:ErrorMessage = inputBodyRef.*:ErrorMessage;
		SET outputSoapRef.Body.*:SubmitPaymentResponse.*:SubmitPaymentResult.*:SubmitPaymentResponse.*:Successful = inBodyRef.*:Successful;
		SET outputSoapRef.Body.*:SubmitPaymentResponse.*:SubmitPaymentResult.*:SubmitPaymentResponse.*:Remarks = inBodyRef.*:Remarks;
		SET Environment.outputData = OutputRoot.SOAP;
		---------------------- Response Logging -------------------------
		MOVE domainDataRef TO OutputRoot.SOAP;
		SET Environment.resPayload = getPayLoad(domainName,domainDataRef,encodeRef,ccidRef);
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		MOVE OutRef TO OutputRoot.XMLNSC;
		SET OutputRoot.SOAP = NULL;

		CALL PayloadLogging(envRef.id,Environment.reqPayload,'CHANNEL_RES',MessageFlowLabel,OutRef);

		SET OutputRoot.Properties = InputRoot.Properties;
		SET OutputRoot.HTTPResponseHeader = InputRoot.HTTPResponseHeader;
		SET OutputRoot.SOAP = Environment.outputData;

		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,' -------- CHANNEL_RESP -------') INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'CHANNEL_RESP data is: '||Environment.resPayload) INTO rc;
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'**********************************************************************') INTO rc;

	END;
END MODULE;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



CREATE COMPUTE MODULE BuildExceptionResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL BuildExceptionResponse();
		RETURN TRUE;
	END;
	CREATE PROCEDURE BuildExceptionResponse() BEGIN
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'..............Error Logging Started...........') INTO rc;
		--DECLARE inRef REFERENCE TO InputRoot.SOAP;
		DECLARE envRef REFERENCE TO Environment.Variables;
		DECLARE enRef REFERENCE TO Environment;
		DECLARE outRefer,outRef REFERENCE TO OutputRoot;
		--DECLARE encodeID INTEGER InputRoot.Properties.Encoding;
		--DECLARE ccsID INTEGER InputRoot.Properties.CodedCharSetId;
		DECLARE domainName CHARACTER FIELDNAME(InputBody);
		DECLARE domainDataRef REFERENCE TO InputBody;
		DECLARE excpRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		DECLARE excpPayload CHARACTER getPayLoad(domainName,domainDataRef,envRef.Encoding,envRef.CodedCharSetId);
		CREATE LASTCHILD OF Environment AS enRef DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'soapenv' NAME 'Envelope';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'soapenv' NAME 'Body';
		CREATE LASTCHILD OF enRef AS enRef NAMESPACE 'esb' NAME ApplicationLabel;
		CALL BuildExceptionDetails(excpRef,enRef,ApplicationLabel);
		SET envRef.UserDefinedException = Environment.XMLNSC;
		MOVE domainDataRef TO Environment.XMLNSC;
		SET domainName = FIELDNAME(domainDataRef);
		DECLARE resPayload CHAR getPayLoad(domainName,domainDataRef,envRef.Encoding,envRef.CodedCharSetId);
		CALL writeToLogFile(MessageFlowLabel,LOGGER_NAME,LOG_TYPE,'Application Built Exception:'||resPayload) INTO rc;
		DECLARE inputRef REFERENCE TO InputRoot.XMLNSC.ExceptionDetails;
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE LASTCHILD OF OutputRoot.XMLNSC NAME 'ExceptionDetails';
		DECLARE outExcpRef REFERENCE TO OutputRoot.XMLNSC.ExceptionDetails;
		SET outExcpRef.Msg_Id = envRef.id;
		SET outExcpRef.ExceptionType = inputRef.excpType;
		SET outExcpRef.ExceptionNumber = inputRef.excpNumber;
		SET outExcpRef.ExceptionLable = inputRef.excpLable;
		SET outExcpRef.ExceptionDescription = inputRef.excpText;
		SET outExcpRef.ActualExceptionText = inputRef.actualExcpText;

		SET OutputLocalEnvironment.Destination.HTTP.RequestIdentifier = envRef.RequestIdentifier;
		CALL writeToLogFile(MessageFlowLabel, LOGGER_NAME,LOG_TYPE,'..............End of Error Logging ...........') INTO rc;
	END;
END MODULE;